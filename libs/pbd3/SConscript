# -*- python -*-

import os
import os.path
import glob

Import('env libraries i18n install_prefix')

pbd3 = env.Copy()

domain = 'libpbd'

pbd3.Append(DOMAIN=domain,MAJOR=4,MINOR=0,MICRO=0)
pbd3.Append(CXXFLAGS="-DPACKAGE=\\\"" + domain + "\\\"")
pbd3.Append(CXXFLAGS="-D_REENTRANT -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE")
pbd3.Append(CXXFLAGS="-DLIBSIGC_DISABLE_DEPRECATED")
pbd3.Append(PACKAGE=domain)
pbd3.Append(POTFILE=domain + '.pot')

pbd3_files = Split("""
basename.cc
base_ui.cc
convert.cc
dmalloc.cc
error.cc
mountpoint.cc
pathscanner.cc
pool.cc
pthread_utils.cc
receiver.cc
stacktrace.cc
strsplit.cc
textreceiver.cc
transmitter.cc
undo.cc
version.cc
whitespace.cc
xml++.cc
""")

conf = Configure(pbd3)
if conf.CheckFunc('getmntent'):
    conf.env.Append(CCFLAGS="-DHAVE_GETMNTENT")
if conf.CheckCHeader('execinfo.h'):
    conf.env.Append(CXXFLAGS="-DHAVE_EXECINFO")
pbd3 = conf.Finish()

pbd3.Merge ([ libraries['sigc2'], libraries['xml'], libraries['glibmm2'], libraries['glib2'] ])

pbd3.VersionBuild(['version.cc','pbd/version.h'], 'SConscript')

libpbd3 = pbd3.SharedLibrary('pbd', pbd3_files)

Default(libpbd3)

if env['NLS']:
    i18n (pbd3, pbd3_files, env)

env.Alias('install', env.Install(os.path.join(install_prefix, 'lib/ardour2'), libpbd3))

env.Alias('tarball', env.Distribute (env['DISTTREE'],
                                     [ 'SConscript', 'i18n.h', 'gettext.h', 'pbd/abstract_ui.cc' ] +
                                     pbd3_files +
                                     glob.glob('po/*.po') +
                                     glob.glob('pbd/*.h')))
