/* $Id: streamablecontent.hg,v 1.3 2004/01/19 19:48:36 murrayc Exp $ */

/* Copyright (C) 2003 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


_DEFS(atkmm,atk)
_PINCLUDE(glibmm/private/object_p.h)

#ifndef DOXYGEN_SHOULD_SKIP_THIS
extern "C"
{
  typedef struct _AtkStreamableContentIface AtkStreamableContentIface;
  typedef struct _AtkStreamableContent      AtkStreamableContent;
}
#endif /* DOXYGEN_SHOULD_SKIP_THIS */


namespace Atk
{

class Object;

/** The ATK interface which provides access to streamable content.
 */
class StreamableContent : public Glib::Interface
{
  _CLASS_INTERFACE(StreamableContent, AtkStreamableContent, ATK_STREAMABLE_CONTENT, AtkStreamableContentIface)
public:

  _WRAP_METHOD(int get_n_mime_types() const, atk_streamable_content_get_n_mime_types)
  _WRAP_METHOD(Glib::ustring get_mime_type(int i) const, atk_streamable_content_get_mime_type)
  _WRAP_METHOD(Glib::RefPtr<Glib::IOChannel> get_stream(const Glib::ustring& mime_type), atk_streamable_content_get_stream)

protected:
  _WRAP_VFUNC(int get_n_mime_types() const, get_n_mime_types)
  _WRAP_VFUNC(const gchar* get_mime_type(int i) const, get_mime_type)
  _WRAP_VFUNC(GIOChannel* get_stream(const Glib::ustring& mime_type), get_stream)                                                   
};

} // namespace Atk

