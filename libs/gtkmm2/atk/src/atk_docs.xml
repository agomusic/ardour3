<root>
<function name="atk_text_get_selection">
<description>
Gets the text from the specified selection.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="selection_num">
<parameter_description> The selection number.  The selected regions are
assigned numbers that correspond to how far the region is from the
start of the text.  The selected region closest to the beginning
of the text region is assigned the number 0, etc.  Note that adding,
moving or deleting a selected region can change the numbering.
</parameter_description>
</parameter>
<parameter name="start_offset">
<parameter_description> passes back the start position of the selected region
</parameter_description>
</parameter>
<parameter name="end_offset">
<parameter_description> passes back the end position of (e.g. offset immediately past) 
the selected region
</parameter_description>
</parameter>
</parameters>
<return> the selected text.
</return>
</function>

<function name="atk_image_get_image_position">
<description>
Gets the position of the image in the form of a point specifying the
images top-left corner.  The values of @x and @y are returned as -1
if the values cannot be obtained.

</description>
<parameters>
<parameter name="image">
<parameter_description> a #GObject instance that implements AtkImageIface
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> address of #gint to put x coordinate position
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> address of #gint to put y coordinate position
</parameter_description>
</parameter>
<parameter name="coord_type">
<parameter_description> specifies whether the coordinates are relative to the screen
or to the components top level window
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_table_is_row_selected">
<description>
Gets a boolean value indicating whether the specified @row
is selected


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="row">
<parameter_description> a #gint representing a row in @table
</parameter_description>
</parameter>
</parameters>
<return> a gboolean representing if the row is selected, or 0
if value does not implement this interface.
</return>
</function>

<function name="atk_table_get_n_rows">
<description>
Gets the number of rows in the table.


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
</parameters>
<return> a gint representing the number of rows, or 0
if value does not implement this interface.
</return>
</function>

<function name="atk_object_ref_state_set">
<description>
Gets a reference to the state set of the accessible; the caller must
unreference it when it is no longer needed.


</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return> a reference to an #AtkStateSet which is the state
set of the accessible
</return>
</function>

<function name="atk_object_connect_property_change_handler">
<description>
Specifies a function to be called when a property changes value.


</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
<parameter name="handler">
<parameter_description> a function to be called when a property changes its value
</parameter_description>
</parameter>
</parameters>
<return> a #guint which is the handler id used in 
atk_object_remove_property_change_handler()
</return>
</function>

<function name="atk_object_set_description">
<description>
Sets the accessible description of the accessible.

</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
<parameter name="description">
<parameter_description> a character string to be set as the accessible description
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_state_type_register">
<description>
Register a new object state.


</description>
<parameters>
<parameter name="name">
<parameter_description> a character string describing the new state.
</parameter_description>
</parameter>
</parameters>
<return> an #AtkState value for the new state.
</return>
</function>

<function name="atk_component_get_mdi_zorder">
<description>
Gets the zorder of the component. The value G_MININT will be returned 
if the layer of the component is not ATK_LAYER_MDI or ATK_LAYER_WINDOW.


</description>
<parameters>
<parameter name="component">
<parameter_description> an #AtkComponent
</parameter_description>
</parameter>
</parameters>
<return> a gint which is the zorder of the component, i.e. the depth at 
which the component is shown in relation to other components in the same 
container.
</return>
</function>

<function name="atk_table_add_row_selection">
<description>
Adds the specified @row to the selection. 


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="row">
<parameter_description> a #gint representing a row in @table
</parameter_description>
</parameter>
</parameters>
<return> a gboolean representing if row was successfully added to selection,
or 0 if value does not implement this interface.
</return>
</function>

<function name="atk_no_op_object_new">
<description>
Provides a default (non-functioning stub) #AtkObject.
Application maintainers should not use this method. 


</description>
<parameters>
<parameter name="obj">
<parameter_description> a #GObject
</parameter_description>
</parameter>
</parameters>
<return> a default (non-functioning stub) #AtkObject
</return>
</function>

<function name="atk_state_type_get_name">
<description>
Gets the description string describing the #AtkStateType @type.


</description>
<parameters>
<parameter name="type">
<parameter_description> The #AtkStateType whose name is required
</parameter_description>
</parameter>
</parameters>
<return> the string describing the AtkStateType
</return>
</function>

<function name="atk_hyperlink_get_start_index">
<description>
Gets the index with the hypertext document at which this link begins.


</description>
<parameters>
<parameter name="link_">
<parameter_description> an #AtkHyperlink
</parameter_description>
</parameter>
</parameters>
<return> the index with the hypertext document at which this link begins
</return>
</function>

<function name="atk_object_get_layer">
<description>
Gets the layer of the accessible.


</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return> an #AtkLayer which is the layer of the accessible

@Deprecated: Use atk_component_get_layer instead.
</return>
</function>

<function name="atk_editable_text_insert_text">
<description>
Insert text at a given position.

</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkEditableText
</parameter_description>
</parameter>
<parameter name="string">
<parameter_description> the text to insert
</parameter_description>
</parameter>
<parameter name="length">
<parameter_description> the length of text to insert, in bytes
</parameter_description>
</parameter>
<parameter name="position">
<parameter_description> The caller initializes this to 
the position at which to insert the text. After the call it
points at the position after the newly inserted text.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_implementor_ref_accessible">
<description>
Gets a reference to an object&apos;s #AtkObject implementation, if
the object implements #AtkObjectIface


</description>
<parameters>
<parameter name="implementor">
<parameter_description> The #GObject instance which should implement #AtkImplementorIface
if a non-null return value is required.
</parameter_description>
</parameter>
</parameters>
<return> a reference to an object&apos;s #AtkObject implementation
</return>
</function>

<function name="atk_hyperlink_is_valid">
<description>
Since the document that a link is associated with may have changed
this method returns %TRUE if the link is still valid (with
respect to the document it references) and %FALSE otherwise.


</description>
<parameters>
<parameter name="link_">
<parameter_description> an #AtkHyperlink
</parameter_description>
</parameter>
</parameters>
<return> whether or not this link is still valid
</return>
</function>

<function name="atk_text_get_offset_at_point">
<description>
Gets the offset of the character located at coordinates @x and @y. @x and @y
are interpreted as being relative to the screen or this widget&apos;s window
depending on @coords.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> screen x-position of character
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> screen y-position of character
</parameter_description>
</parameter>
<parameter name="coords">
<parameter_description> specify whether coordinates are relative to the screen or
widget window 
</parameter_description>
</parameter>
</parameters>
<return> the offset to the character which is located at
the specified @x and @y coordinates.
</return>
</function>

<function name="atk_text_get_n_selections">
<description>
Gets the number of selected regions.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
</parameters>
<return> The number of selected regions, or -1 if a failure
occurred.
</return>
</function>

<function name="atk_text_get_run_attributes">
<description>
Creates an #AtkAttributeSet which consists of the attributes explicitly
set at the position @offset in the text. @start_offset and @end_offset are
set to the start and end of the range around @offset where the attributes are
invariant. Note that @end_offset is the offset of the first character
after the range.  See the enum AtkTextAttribute for types of text 
attributes that can be returned. Note that other attributes may also be 
returned.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description> the offset at which to get the attributes
</parameter_description>
</parameter>
<parameter name="start_offset">
<parameter_description> the address to put the start offset of the range
</parameter_description>
</parameter>
<parameter name="end_offset">
<parameter_description> the address to put the end offset of the range
</parameter_description>
</parameter>
</parameters>
<return> an #AtkAttributeSet which contains the attributes explicitly set
at @offset. This #AtkAttributeSet should be freed by a call to
atk_attribute_set_free().
</return>
</function>

<function name="atk_table_get_caption">
<description>
Gets the caption for the @table.


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableInterface
</parameter_description>
</parameter>
</parameters>
<return> a AtkObject* representing the table caption, or %NULL
if value does not implement this interface.
</return>
</function>

<function name="atk_component_ref_accessible_at_point">
<description>
Gets a reference to the accessible child, if one exists, at the
coordinate point specified by @x and @y.


</description>
<parameters>
<parameter name="component">
<parameter_description> the #AtkComponent
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> x coordinate
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> y coordinate
</parameter_description>
</parameter>
<parameter name="coord_type">
<parameter_description> specifies whether the coordinates are relative to the screen
or to the components top level window
</parameter_description>
</parameter>
</parameters>
<return> a reference to the accessible child, if one exists
</return>
</function>

<function name="atk_add_focus_tracker">
<description>
Adds the specified function to the list of functions to be called
when an object receives focus.


</description>
<parameters>
<parameter name="focus_tracker">
<parameter_description> Function to be added to the list of functions to be called
when an object receives focus.
</parameter_description>
</parameter>
</parameters>
<return> added focus tracker id, or 0 on failure.
</return>
</function>

<function name="atk_table_set_summary">
<description>
Sets the summary description of the table.

</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="accessible">
<parameter_description> an #AtkObject representing the summary description
to set for @table
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_editable_text_cut_text">
<description>
Copy text from @start_pos up to, but not including @end_pos
to the clipboard and then delete from the widget.

</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkEditableText
</parameter_description>
</parameter>
<parameter name="start_pos">
<parameter_description> start position
</parameter_description>
</parameter>
<parameter name="end_pos">
<parameter_description> end position
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_gobject_accessible_for_object">
<description>
Gets the accessible object for the specified @obj.


</description>
<parameters>
<parameter name="obj">
<parameter_description> a #GObject
</parameter_description>
</parameter>
</parameters>
<return> a #AtkObject which is the accessible object for the @obj
</return>
</function>

<function name="atk_table_get_column_description">
<description>
Gets the description text of the specified @column in the table


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="column">
<parameter_description> a #gint representing a column in @table
</parameter_description>
</parameter>
</parameters>
<return> a gchar* representing the column description, or %NULL
if value does not implement this interface.
</return>
</function>

<function name="atk_text_get_character_at_offset">
<description>
Gets the specified text.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description> position
</parameter_description>
</parameter>
</parameters>
<return> the character at @offset.
</return>
</function>

<function name="atk_no_op_object_factory_new">
<description>
Creates an instance of an #AtkObjectFactory which generates primitive
(non-functioning) #AtkObjects. 


</description>
<parameters>
</parameters>
<return> an instance of an #AtkObjectFactory
</return>
</function>

<function name="atk_role_get_name">
<description>
Gets the description string describing the #AtkRole @role.


</description>
<parameters>
<parameter name="role">
<parameter_description> The #AtkRole whose name is required
</parameter_description>
</parameter>
</parameters>
<return> the string describing the AtkRole
</return>
</function>

<function name="atk_text_get_default_attributes">
<description>
Creates an #AtkAttributeSet which consists of the default values of
attributes for the text. See the enum AtkTextAttribute for types of text 
attributes that can be returned. Note that other attributes may also be 
returned.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
</parameters>
<return> an #AtkAttributeSet which contains the default values of attributes.
at @offset. This #AtkAttributeSet should be freed by a call to
atk_attribute_set_free().
</return>
</function>

<function name="atk_text_set_selection">
<description>
Changes the start and end offset of the specified selection.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="selection_num">
<parameter_description> The selection number.  The selected regions are
assigned numbers that correspond to how far the region is from the
start of the text.  The selected region closest to the beginning
of the text region is assigned the number 0, etc.  Note that adding,
moving or deleting a selected region can change the numbering.
</parameter_description>
</parameter>
<parameter name="start_offset">
<parameter_description> the new start position of the selection
</parameter_description>
</parameter>
<parameter name="end_offset">
<parameter_description> the new end position of (e.g. offset immediately past) 
the selection
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if success, %FALSE otherwise
</return>
</function>

<function name="atk_streamable_content_get_n_mime_types">
<description>
Gets the number of mime types supported by this object.


</description>
<parameters>
<parameter name="streamable">
<parameter_description> a GObject instance that implements AtkStreamableContentIface
</parameter_description>
</parameter>
</parameters>
<return> a gint which is the number of mime types supported by the object.
</return>
</function>

<function name="atk_relation_get_relation_type">
<description>
Gets the type of @relation


</description>
<parameters>
<parameter name="relation">
<parameter_description> an #AtkRelation 
</parameter_description>
</parameter>
</parameters>
<return> the type of @relation
</return>
</function>

<function name="atk_editable_text_paste_text">
<description>
Paste text from clipboard to specified @position.

</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkEditableText
</parameter_description>
</parameter>
<parameter name="position">
<parameter_description> position to paste
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_object_factory_get_accessible_type">
<description>
Gets the GType of the accessible which is created by the factory. 
The value G_TYPE_INVALID is returned if no type if found.

</description>
<parameters>
<parameter name="factory">
<parameter_description> an #AtkObjectFactory 
</parameter_description>
</parameter>
</parameters>
<return> the type of the accessible which is created by the @factory.
</return>
</function>

<function name="atk_hypertext_get_link">
<description>
Gets the link in this hypertext document at index 
@link_index


</description>
<parameters>
<parameter name="hypertext">
<parameter_description> an #AtkHypertext
</parameter_description>
</parameter>
<parameter name="link_index">
<parameter_description> an integer specifying the desired link
</parameter_description>
</parameter>
</parameters>
<return> the link in this hypertext document at
index @link_index
</return>
</function>

<function name="atk_text_get_range_extents">
<description>
Get the bounding box for text within the specified range.

</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="start_offset">
<parameter_description> The offset of the first text character for which boundary 
information is required.
</parameter_description>
</parameter>
<parameter name="end_offset">
<parameter_description> The offset of the text character after the last character 
for which boundary information is required.
</parameter_description>
</parameter>
<parameter name="coord_type">
<parameter_description> Specify whether coordinates are relative to the screen or widget window.
</parameter_description>
</parameter>
<parameter name="rect">
<parameter_description> A pointer to a AtkTextRectangle which is filled in by this function.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_table_get_column_at_index">
<description>
Gets a #gint representing the column at the specified @index_, or -1
if the table does not implement this interface


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableInterface
</parameter_description>
</parameter>
<parameter name="index_">
<parameter_description> a #gint representing an index in @table
</parameter_description>
</parameter>
</parameters>
<return> a gint representing the column at the specified index.
</return>
</function>

<function name="atk_object_get_parent">
<description>
Gets the accessible parent of the accessible.


</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return> a #AtkObject representing the accessible parent of the accessible
</return>
</function>

<function name="atk_selection_is_child_selected">
<description>
Determines if the current child of this object is selected
Note: callers should not rely on %NULL or on a zero value for
indication of whether AtkSelectionIface is implemented, they should
use type checking/interface checking macros or the
atk_get_accessible_value() convenience method.


</description>
<parameters>
<parameter name="selection">
<parameter_description> a #GObject instance that implements AtkSelectionIface
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> a #gint specifying the child index.
</parameter_description>
</parameter>
</parameters>
<return> a gboolean representing the specified child is selected, or 0
if @selection does not implement this interface.
</return>
</function>

<function name="atk_text_add_selection">
<description>
Adds a selection bounded by the specified offsets.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="start_offset">
<parameter_description> the start position of the selected region
</parameter_description>
</parameter>
<parameter name="end_offset">
<parameter_description> the offset of the first character after the selected region.
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if success, %FALSE otherwise
</return>
</function>

<function name="atk_text_get_character_count">
<description>
Gets the character count.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
</parameters>
<return> the number of characters.
</return>
</function>

<function name="atk_relation_type_get_name">
<description>
Gets the description string describing the #AtkRelationType @type.


</description>
<parameters>
<parameter name="type">
<parameter_description> The #AtkRelationType whose name is required
</parameter_description>
</parameter>
</parameters>
<return> the string describing the AtkRelationType
</return>
</function>

<function name="atk_table_set_row_header">
<description>
Sets the specified row header to @header.

</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="row">
<parameter_description> a #gint representing a row in @table
</parameter_description>
</parameter>
<parameter name="header">
<parameter_description> an #AtkTable 
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_gobject_accessible_get_object">
<description>
Gets the GObject for which @obj is the accessible object.


</description>
<parameters>
<parameter name="obj">
<parameter_description> a #AtkObject
</parameter_description>
</parameter>
</parameters>
<return> a #GObject which is the object for which @obj is the accessible objedct
</return>
</function>

<function name="atk_relation_set_new">
<description>
Creates a new empty relation set.


</description>
<parameters>
</parameters>
<return> a new #AtkRelationSet 
</return>
</function>

<function name="atk_relation_add_target">
<description>
Adds the specified AtkObject to the target for the relation, if it is
not already present.

Since: 1.9

</description>
<parameters>
<parameter name="relation">
<parameter_description> an #AtkRelation
</parameter_description>
</parameter>
<parameter name="target">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_hyperlink_get_n_anchors">
<description>
Gets the number of anchors associated with this hyperlink.


</description>
<parameters>
<parameter name="link_">
<parameter_description> an #AtkHyperlink
</parameter_description>
</parameter>
</parameters>
<return> the number of anchors associated with this hyperlink
</return>
</function>

<function name="atk_object_set_name">
<description>
Sets the accessible name of the accessible.

</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
<parameter name="name">
<parameter_description> a character string to be set as the accessible name
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_hyperlink_is_selected_link">
<description>
Determines whether this AtkHyperlink is selected


</description>
<parameters>
<parameter name="link_">
<parameter_description> an #AtkHyperlink
</parameter_description>
</parameter>
</parameters>
<return> True is the AtkHyperlink is selected, False otherwise
</return>
</function>

<function name="atk_object_ref_accessible_child">
<description>
Gets a reference to the specified accessible child of the object.
The accessible children are 0-based so the first accessible child is
at index 0, the second at index 1 and so on.


</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> a gint representing the position of the child, starting from 0
</parameter_description>
</parameter>
</parameters>
<return> an #AtkObject representing the specified accessible child
of the accessible.
</return>
</function>

<function name="atk_relation_set_get_relation">
<description>
Determines the relation at the specified position in the relation set.


</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkRelationSet
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> a gint representing a position in the set, starting from 0.
</parameter_description>
</parameter>
</parameters>
<return> a #AtkRelation, which is the relation at position i in the set.
</return>
</function>

<function name="atk_table_remove_row_selection">
<description>
Removes the specified @row from the selection. 


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="row">
<parameter_description> a #gint representing a row in @table
</parameter_description>
</parameter>
</parameters>
<return> a gboolean representing if the row was successfully removed from
the selection, or 0 if value does not implement this interface.
</return>
</function>

<function name="atk_text_set_caret_offset">
<description>
Sets the caret (cursor) position to the specified @offset.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description> position
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if success, %FALSE otherwise.
</return>
</function>

<function name="atk_text_attribute_for_name">
<description>
Get the #AtkTextAttribute type corresponding to a text attribute name.


</description>
<parameters>
<parameter name="name">
<parameter_description> a string which is the (non-localized) name of an ATK text attribute.
</parameter_description>
</parameter>
</parameters>
<return> the #AtkTextAttribute enumerated type corresponding to the specified
name,
or #ATK_TEXT_ATTRIBUTE_INVALID if no matching text attribute is found.
</return>
</function>

<function name="atk_image_get_image_description">
<description>
Get a textual description of this image.


</description>
<parameters>
<parameter name="image">
<parameter_description> a #GObject instance that implements AtkImageIface
</parameter_description>
</parameter>
</parameters>
<return> a string representing the image description
</return>
</function>

<function name="atk_document_get_document">
<description>
Gets a %gpointer that points to an instance of the DOM.  It is
up to the caller to check atk_document_get_type to determine
how to cast this pointer.


</description>
<parameters>
<parameter name="document">
<parameter_description> a #GObject instance that implements AtkDocumentIface
</parameter_description>
</parameter>
</parameters>
<return> a %gpointer that points to an instance of the DOM.
</return>
</function>

<function name="atk_selection_ref_selection">
<description>
Gets a reference to the accessible object representing the specified 
selected child of the object.
Note: callers should not rely on %NULL or on a zero value for
indication of whether AtkSelectionIface is implemented, they should
use type checking/interface checking macros or the
atk_get_accessible_value() convenience method.


</description>
<parameters>
<parameter name="selection">
<parameter_description> a #GObject instance that implements AtkSelectionIface
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> a #gint specifying the index in the selection set.  (e.g. the
ith selection as opposed to the ith child).
</parameter_description>
</parameter>
</parameters>
<return> an #AtkObject representing the selected accessible , or %NULL
if @selection does not implement this interface.
</return>
</function>

<function name="atk_remove_focus_tracker">
<description>
Removes the specified focus tracker from the list of functions
to be called when any object receives focus.

</description>
<parameters>
<parameter name="tracker_id">
<parameter_description> the id of the focus tracker to remove
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_component_grab_focus">
<description>
Grabs focus for this @component.


</description>
<parameters>
<parameter name="component">
<parameter_description> an #AtkComponent
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if successful, %FALSE otherwise.
</return>
</function>

<function name="atk_relation_type_register">
<description>
Associate @name with a new #AtkRelationType
 

</description>
<parameters>
<parameter name="name">
<parameter_description> a name string
</parameter_description>
</parameter>
</parameters>
<return> an #AtkRelationType associated with @name
</return>
</function>

<function name="atk_relation_set_add_relation_by_type">
<description>
Add a new relation of the specified type with the specified target to 
the current relation set if the relation set does not contain a relation
of that type. If it is does contain a relation of that typea the target
is added to the relation.

Since: 1.9

</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkRelationSet
</parameter_description>
</parameter>
<parameter name="relationship">
<parameter_description> an #AtkRelationType
</parameter_description>
</parameter>
<parameter name="target">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_object_get_role">
<description>
Gets the role of the accessible.


</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return> an #AtkRole which is the role of the accessible
</return>
</function>

<function name="atk_add_key_event_listener">
<description>
Adds the specified function to the list of functions to be called
when a key event occurs.  The @data element will be passed to the
#AtkKeySnoopFunc (@listener) as the @func_data param, on notification.


</description>
<parameters>
<parameter name="listener">
<parameter_description> the listener to notify
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> a #gpointer that points to a block of data that should be sent to the registered listeners,
along with the event notification, when it occurs.  
</parameter_description>
</parameter>
</parameters>
<return> added event listener id, or 0 on failure.
</return>
</function>

<function name="atk_object_notify_state_change">
<description>
Emits a state-change signal for the specified state. 

</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
<parameter name="state">
<parameter_description> an #AtkState whose state is changed
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> a gboolean which indicates whether the state is being set on or off
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_focus_tracker_notify">
<description>
Cause the focus tracker functions which have been specified to be
executed for the object.

</description>
<parameters>
<parameter name="object">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_document_get_document_type">
<description>
Gets a string indicating the document type.


</description>
<parameters>
<parameter name="document">
<parameter_description> a #GObject instance that implements AtkDocumentIface
</parameter_description>
</parameter>
</parameters>
<return> a string indicating the document type
</return>
</function>

<function name="atk_image_set_image_description">
<description>
Sets the textual description for this image.


</description>
<parameters>
<parameter name="image">
<parameter_description> a #GObject instance that implements AtkImageIface
</parameter_description>
</parameter>
<parameter name="description">
<parameter_description> a string description to set for @image
</parameter_description>
</parameter>
</parameters>
<return> boolean TRUE, or FALSE if operation could
not be completed.
</return>
</function>

<function name="atk_get_root">
<description>
Gets the root accessible container for the current application.


</description>
<parameters>
</parameters>
<return> the root accessible container for the current application
</return>
</function>

<function name="atk_editable_text_copy_text">
<description>
Copy text from @start_pos up to, but not including @end_pos 
to the clipboard.

</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkEditableText
</parameter_description>
</parameter>
<parameter name="start_pos">
<parameter_description> start position
</parameter_description>
</parameter>
<parameter name="end_pos">
<parameter_description> end position
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_object_ref_relation_set">
<description>
Gets the #AtkRelationSet associated with the object.


</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return> an #AtkRelationSet representing the relation set of the object.
</return>
</function>

<function name="atk_object_factory_create_accessible">
<description>
Provides an #AtkObject that implements an accessibility interface 
on behalf of @obj


</description>
<parameters>
<parameter name="factory">
<parameter_description> The #AtkObjectFactory associated with @obj&apos;s
object type
</parameter_description>
</parameter>
<parameter name="obj">
<parameter_description> a #GObject 
</parameter_description>
</parameter>
</parameters>
<return> an #AtkObject that implements an accessibility interface
on behalf of @obj
</return>
</function>

<function name="atk_table_get_selected_rows">
<description>
Gets the selected rows of the table by initializing **selected with 
the selected row numbers. This array should be freed by the caller.


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="selected">
<parameter_description> a #gint** that is to contain the selected row numbers
</parameter_description>
</parameter>
</parameters>
<return> a gint representing the number of selected rows,
or zero if value does not implement this interface.
</return>
</function>

<function name="atk_state_set_clear_states">
<description>
Removes all states from the state set.

</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkStateSet
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_object_get_index_in_parent">
<description>
Gets the 0-based index of this accessible in its parent; returns -1 if the
accessible does not have an accessible parent.


</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return> an integer which is the index of the accessible in its parent
</return>
</function>

<function name="atk_text_get_text_at_offset">
<description>
Gets the specified text.

If the boundary_type if ATK_TEXT_BOUNDARY_CHAR the character at the
offset is returned.

If the boundary_type is ATK_TEXT_BOUNDARY_WORD_START the returned string
is from the word start at or before the offset to the word start after 
the offset.

The returned string will contain the word at the offset if the offset
is inside a word and will contain the word before the offset if the 
offset is not inside a word.

If the boundary_type is ATK_TEXT_BOUNDARY_WORD_END the returned string
is from the word end before the offset to the word end at or after the
offset.

The returned string will contain the word at the offset if the offset
is inside a word and will contain the word after to the offset if the 
offset is not inside a word.

If the boundary type is ATK_TEXT_BOUNDARY_SENTENCE_START the returned
string is from the sentence start at or before the offset to the sentence
start after the offset.

The returned string will contain the sentence at the offset if the offset
is inside a sentence and will contain the sentence before the offset 
if the offset is not inside a sentence.

If the boundary_type is ATK_TEXT_BOUNDARY_SENTENCE_END the returned string
is from the sentence end before the offset to the sentence end at or
after the offset.

The returned string will contain the sentence at the offset if the offset
is inside a sentence and will contain the sentence after the offset 
if the offset is not inside a sentence.

If the boundary type is ATK_TEXT_BOUNDARY_LINE_START the returned
string is from the line start at or before the offset to the line
start after the offset.

If the boundary_type is ATK_TEXT_BOUNDARY_LINE_END the returned string
is from the line end before the offset to the line end at or after
the offset.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description> position
</parameter_description>
</parameter>
<parameter name="boundary_type">
<parameter_description> An #AtkTextBoundary
</parameter_description>
</parameter>
<parameter name="start_offset">
<parameter_description> the start offset of the returned string
</parameter_description>
</parameter>
<parameter name="end_offset">
<parameter_description> the offset of the first character after the 
returned substring
</parameter_description>
</parameter>
</parameters>
<return> the text at @offset bounded by the specified @boundary_type.
</return>
</function>

<function name="atk_table_add_column_selection">
<description>
Adds the specified @column to the selection. 


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="column">
<parameter_description> a #gint representing a column in @table
</parameter_description>
</parameter>
</parameters>
<return> a gboolean representing if the column was successfully added to 
the selection, or 0 if value does not implement this interface.
</return>
</function>

<function name="atk_value_get_minimum_value">
<description>
Gets the minimum value of this object.

</description>
<parameters>
<parameter name="obj">
<parameter_description> a GObject instance that implements AtkValueIface
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> a #GValue representing the minimum accessible value
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_relation_get_target">
<description>
Gets the target list of @relation


</description>
<parameters>
<parameter name="relation">
<parameter_description> an #AtkRelation
</parameter_description>
</parameter>
</parameters>
<return> the target list of @relation
</return>
</function>

<function name="atk_get_focus_object">
<description>
Gets the currently focused object.


</description>
<parameters>
</parameters>
<return> the currently focused object for the current application
</return>
</function>

<function name="atk_object_remove_relationship">
<description>
Removes a relationship of the specified type with the specified target.


</description>
<parameters>
<parameter name="object">
<parameter_description> The #AtkObject from which an AtkRelation is to be removed. 
</parameter_description>
</parameter>
<parameter name="relationship">
<parameter_description> The #AtkRelationType of the relation
</parameter_description>
</parameter>
<parameter name="target">
<parameter_description> The #AtkObject which is the target of the relation to be removed.
</parameter_description>
</parameter>
</parameters>
<return>TRUE if the relationship is removed.
</return>
</function>

<function name="atk_state_set_remove_state">
<description>
Removes the state for the specified type from the state set.


</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkStateSet
</parameter_description>
</parameter>
<parameter name="type">
<parameter_description> an #AtkType
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if @type was the state type is in @set.
</return>
</function>

<function name="atk_text_attribute_get_value">
<description>
Gets the value for the index of the #AtkTextAttribute


</description>
<parameters>
<parameter name="attr">
<parameter_description> The #AtkTextAttribute for which a value is required
</parameter_description>
</parameter>
<parameter name="index_">
<parameter_description> The index of the required value
</parameter_description>
</parameter>
</parameters>
<return> a string containing the value; this string should not be freed;
NULL is returned if there are no values maintained for the attr value. 
</return>
</function>

<function name="atk_component_contains">
<description>
Checks whether the specified point is within the extent of the @component.


</description>
<parameters>
<parameter name="component">
<parameter_description> the #AtkComponent
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> x coordinate
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> y coordinate
</parameter_description>
</parameter>
<parameter name="coord_type">
<parameter_description> specifies whether the coordinates are relative to the screen
or to the components top level window
</parameter_description>
</parameter>
</parameters>
<return> %TRUE or %FALSE indicating whether the specified point is within
the extent of the @component or not
</return>
</function>

<function name="atk_component_get_layer">
<description>
Gets the layer of the component.


</description>
<parameters>
<parameter name="component">
<parameter_description> an #AtkComponent
</parameter_description>
</parameter>
</parameters>
<return> an #AtkLayer which is the layer of the component
</return>
</function>

<function name="atk_component_add_focus_handler">
<description>
Add the specified handler to the set of functions to be called 
when this object receives focus events (in or out). If the handler is
already added it is not added again


</description>
<parameters>
<parameter name="component">
<parameter_description> The #AtkComponent to attach the @handler to
</parameter_description>
</parameter>
<parameter name="handler">
<parameter_description> The #AtkFocusHandler to be attached to @component
</parameter_description>
</parameter>
</parameters>
<return> a handler id which can be used in atk_component_remove_focus_handler
or zero if the handler was already added.
</return>
</function>

<function name="atk_component_set_extents">
<description>
Sets the extents of @component.


</description>
<parameters>
<parameter name="component">
<parameter_description> an #AtkComponent
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> x coordinate
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> y coordinate
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> width to set for @component
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> height to set for @component
</parameter_description>
</parameter>
<parameter name="coord_type">
<parameter_description> specifies whether the coordinates are relative to the screen
or to the components top level window
</parameter_description>
</parameter>
</parameters>
<return> %TRUE or %FALSE whether the extents were set or not
</return>
</function>

<function name="atk_relation_new">
<description>
Create a new relation for the specified key and the specified list
of targets.


</description>
<parameters>
<parameter name="targets">
<parameter_description> an array of pointers to #AtkObjects  
</parameter_description>
</parameter>
<parameter name="n_targets">
<parameter_description> number of #AtkObjects pointed to by @targets
</parameter_description>
</parameter>
<parameter name="relationship">
<parameter_description> an #AtkRelationType with which to create the new
#AtkRelation
</parameter_description>
</parameter>
</parameters>
<return> a pointer to a new #AtkRelation
</return>
</function>

<function name="atk_object_get_n_accessible_children">
<description>
Gets the number of accessible children of the accessible.


</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return> an integer representing the number of accessible children
of the accessible.
</return>
</function>

<function name="atk_table_get_column_header">
<description>
Gets the column header of a specified column in an accessible table.


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="column">
<parameter_description> a #gint representing a column in the table
</parameter_description>
</parameter>
</parameters>
<return> a AtkObject* representing the specified column header, or
%NULL if value does not implement this interface.
</return>
</function>

<function name="atk_table_set_row_description">
<description>
Sets the description text for the specified @row of @table.

</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="row">
<parameter_description> a #gint representing a row in @table
</parameter_description>
</parameter>
<parameter name="description">
<parameter_description> a #gchar representing the description text
to set for the specified @row of @table
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_object_initialize">
<description>
This function is called when implementing subclasses of #AtkObject.
It does initialization required for the new object. It is intended
that this function should called only in the ..._new() functions used
to create an instance of a subclass of #AtkObject

</description>
<parameters>
<parameter name="accessible">
<parameter_description> a #AtkObject
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> a #gpointer which identifies the object for which the AtkObject was created.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_table_is_selected">
<description>
Gets a boolean value indicating whether the accessible object
at the specified @row and @column is selected


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="row">
<parameter_description> a #gint representing a row in @table
</parameter_description>
</parameter>
<parameter name="column">
<parameter_description> a #gint representing a column in @table
</parameter_description>
</parameter>
</parameters>
<return> a gboolean representing if the cell is selected, or 0
if value does not implement this interface.
</return>
</function>

<function name="atk_selection_select_all_selection">
<description>
Causes every child of the object to be selected if the object
supports multiple selections.


</description>
<parameters>
<parameter name="selection">
<parameter_description> a #GObject instance that implements AtkSelectionIface
</parameter_description>
</parameter>
</parameters>
<return> TRUE if success, FALSE otherwise.
</return>
</function>

<function name="atk_selection_clear_selection">
<description>
Clears the selection in the object so that no children in the object
are selected.


</description>
<parameters>
<parameter name="selection">
<parameter_description> a #GObject instance that implements AtkSelectionIface
</parameter_description>
</parameter>
</parameters>
<return> TRUE if success, FALSE otherwise.
</return>
</function>

<function name="atk_registry_get_factory_type">
<description>
Provides a #GType indicating the #AtkObjectFactory subclass
associated with @type.


</description>
<parameters>
<parameter name="registry">
<parameter_description> an #AtkRegistry
</parameter_description>
</parameter>
<parameter name="type">
<parameter_description> a #GType with which to look up the associated #AtkObjectFactory
subclass
</parameter_description>
</parameter>
</parameters>
<return> a #GType associated with type @type
</return>
</function>

<function name="atk_focus_tracker_init">
<description>
Specifies the function to be called for focus tracker initialization.
This function should be called by an implementation of the
ATK interface if any specific work needs to be done to enable
focus tracking.

</description>
<parameters>
<parameter name="add_function">
<parameter_description> Function to be called for focus tracker initialization
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_table_get_n_columns">
<description>
Gets the number of columns in the table.


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
</parameters>
<return> a gint representing the number of columns, or 0
if value does not implement this interface.
</return>
</function>

<function name="atk_text_get_bounded_ranges">
<description>
Get the ranges of text in the specified bounding box.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="rect">
<parameter_description> An AtkTextRectagle giving the dimensions of the bounding box.
</parameter_description>
</parameter>
<parameter name="coord_type">
<parameter_description> Specify whether coordinates are relative to the screen or widget window.
</parameter_description>
</parameter>
<parameter name="x_clip_type">
<parameter_description> Specify the horizontal clip type.
</parameter_description>
</parameter>
<parameter name="y_clip_type">
<parameter_description> Specify the vertical clip type.
</parameter_description>
</parameter>
</parameters>
<return> Array of AtkTextRange. The last element of the array returned 
by this function will be NULL.
</return>
</function>

<function name="atk_table_get_row_extent_at">
<description>
Gets the number of rows occupied by the accessible object
at a specified @row and @column in the @table.


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="row">
<parameter_description> a #gint representing a row in @table
</parameter_description>
</parameter>
<parameter name="column">
<parameter_description> a #gint representing a column in @table
</parameter_description>
</parameter>
</parameters>
<return> a gint representing the row extent at specified position, or 0
if value does not implement this interface.
</return>
</function>

<function name="atk_table_is_column_selected">
<description>
Gets a boolean value indicating whether the specified @column
is selected


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="column">
<parameter_description> a #gint representing a column in @table
</parameter_description>
</parameter>
</parameters>
<return> a gboolean representing if the column is selected, or 0
if value does not implement this interface.
</return>
</function>

<function name="atk_object_get_description">
<description>
Gets the accessible description of the accessible.


</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return> a character string representing the accessible description
of the accessible.

</return>
</function>

<function name="atk_hyperlink_get_object">
<description>
Returns the item associated with this hyperlinks nth anchor.
For instance, the returned #AtkObject will implement #AtkText
if @link_ is a text hyperlink, #AtkImage if @link_ is an image
hyperlink etc. 

Multiple anchors are primarily used by client-side image maps.


</description>
<parameters>
<parameter name="link_">
<parameter_description> an #AtkHyperlink
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> a (zero-index) integer specifying the desired anchor
</parameter_description>
</parameter>
</parameters>
<return> an #AtkObject associated with this hyperlinks i-th anchor
</return>
</function>

<function name="atk_get_toolkit_name">
<description>
Gets name string for the GUI toolkit implementing ATK for this application.


</description>
<parameters>
</parameters>
<return> name string for the GUI toolkit implementing ATK for this application
</return>
</function>

<function name="atk_relation_type_for_name">
<description>
Get the #AtkRelationType type corresponding to a relation name.


</description>
<parameters>
<parameter name="name">
<parameter_description> a string which is the (non-localized) name of an ATK relation type.
</parameter_description>
</parameter>
</parameters>
<return> the #AtkRelationType enumerated type corresponding to the specified name,
or #ATK_RELATION_NULL if no matching relation type is found.
</return>
</function>

<function name="atk_table_get_selected_columns">
<description>
Gets the selected columns of the table by initializing **selected with 
the selected column numbers. This array should be freed by the caller.


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="selected">
<parameter_description> a #gint** that is to contain the selected columns numbers
</parameter_description>
</parameter>
</parameters>
<return> a gint representing the number of selected columns,
or %0 if value does not implement this interface.
</return>
</function>

<function name="atk_object_get_mdi_zorder">
<description>
Gets the zorder of the accessible. The value G_MININT will be returned 
if the layer of the accessible is not ATK_LAYER_MDI.


</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return> a gint which is the zorder of the accessible, i.e. the depth at 
which the component is shown in relation to other components in the same 
container.

@Deprecated: Use atk_component_get_mdi_zorder instead.
</return>
</function>

<function name="atk_component_get_position">
<description>
Gets the position of @component in the form of 
a point specifying @component&apos;s top-left corner.

</description>
<parameters>
<parameter name="component">
<parameter_description> an #AtkComponent
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> address of #gint to put x coordinate position
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> address of #gint to put y coordinate position
</parameter_description>
</parameter>
<parameter name="coord_type">
<parameter_description> specifies whether the coordinates are relative to the screen
or to the components top level window
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_streamable_content_get_stream">
<description>
Gets the content in the specified mime type.


</description>
<parameters>
<parameter name="streamable">
<parameter_description> a GObject instance that implements AtkStreamableContentIface
</parameter_description>
</parameter>
<parameter name="mime_type">
<parameter_description> a gchar* representing the mime type
</parameter_description>
</parameter>
</parameters>
<return> A #GIOChannel which contains the content in the specified mime
type.
</return>
</function>

<function name="atk_relation_set_contains">
<description>
Determines whether the relation set contains a relation that matches the
specified type.


</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkRelationSet
</parameter_description>
</parameter>
<parameter name="relationship">
<parameter_description> an #AtkRelationType
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if @relationship is the relationship type of a relation
in @set, %FALSE otherwise
</return>
</function>

<function name="atk_action_get_name">
<description>
Returns the name of the specified action of the object.


</description>
<parameters>
<parameter name="action">
<parameter_description> a #GObject instance that implements AtkActionIface
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> the action index corresponding to the action to be performed 
</parameter_description>
</parameter>
</parameters>
<return>a name string, or %NULL
if @action does not implement this interface.
</return>
</function>

<function name="atk_state_set_new">
<description>
Creates a new empty state set.


</description>
<parameters>
</parameters>
<return> a new #AtkStateSet 
</return>
</function>

<function name="atk_table_set_caption">
<description>
Sets the caption for the table.

</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="caption">
<parameter_description> a #AtkObject representing the caption to set for @table
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_text_attribute_register">
<description>
Associate @name with a new #AtkTextAttribute


</description>
<parameters>
<parameter name="name">
<parameter_description> a name string
</parameter_description>
</parameter>
</parameters>
<return> an #AtkTextAttribute associated with @name
</return>
</function>

<function name="atk_action_do_action">
<description>
Perform the specified action on the object.


</description>
<parameters>
<parameter name="action">
<parameter_description> a #GObject instance that implements AtkActionIface
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> the action index corresponding to the action to be performed 
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if success, %FALSE otherwise

</return>
</function>

<function name="atk_hyperlink_is_inline">
<description>
Indicates whether the link currently displays some or all of its
content inline.  Ordinary HTML links will usually return
%FALSE, but an inline &amp;lt;src&amp;gt; HTML element will return
%TRUE.
a *

</description>
<parameters>
<parameter name="link_">
<parameter_description> an #AtkHyperlink
</parameter_description>
</parameter>
</parameters>
<return> whether or not this link displays its content inline.

</return>
</function>

<function name="atk_role_get_localized_name">
<description>
Gets the localized description string describing the #AtkRole @role.


</description>
<parameters>
<parameter name="role">
<parameter_description> The #AtkRole whose localized name is required
</parameter_description>
</parameter>
</parameters>
<return> the localized string describing the AtkRole
</return>
</function>

<function name="atk_role_for_name">
<description>
Get the #AtkRole type corresponding to a rolew name.


</description>
<parameters>
<parameter name="name">
<parameter_description> a string which is the (non-localized) name of an ATK role.
</parameter_description>
</parameter>
</parameters>
<return> the #AtkRole enumerated type corresponding to the specified
name,
or #ATK_ROLE_INVALID if no matching role is found.
</return>
</function>

<function name="atk_selection_remove_selection">
<description>
Removes the specified child of the object from the object&apos;s selection.


</description>
<parameters>
<parameter name="selection">
<parameter_description> a #GObject instance that implements AtkSelectionIface
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> a #gint specifying the index in the selection set.  (e.g. the
ith selection as opposed to the ith child).
</parameter_description>
</parameter>
</parameters>
<return> TRUE if success, FALSE otherwise.
</return>
</function>

<function name="atk_text_free_ranges">
<description>
Frees the memory associated with an array of AtkTextRange. It is assumed
that the array was returned by the function atk_text_get_bounded_ranges
and is NULL terminated.

</description>
<parameters>
<parameter name="ranges">
<parameter_description> A pointer to an array of  #AtkTextRange which is to be freed.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_table_set_column_description">
<description>
Sets the description text for the specified @column of the @table.

</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="column">
<parameter_description> a #gint representing a column in @table
</parameter_description>
</parameter>
<parameter name="description">
<parameter_description> a #gchar representing the description text
to set for the specified @column of the @table
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_component_set_position">
<description>
Sets the postition of @component.


</description>
<parameters>
<parameter name="component">
<parameter_description> an #AtkComponent
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> x coordinate
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> y coordinate
</parameter_description>
</parameter>
<parameter name="coord_type">
<parameter_description> specifies whether the coordinates are relative to the screen
or to the components top level window
</parameter_description>
</parameter>
</parameters>
<return> %TRUE or %FALSE whether or not the position was set or not
</return>
</function>

<function name="atk_editable_text_delete_text">
<description>
Delete text @start_pos up to, but not including @end_pos.

</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkEditableText
</parameter_description>
</parameter>
<parameter name="start_pos">
<parameter_description> start position
</parameter_description>
</parameter>
<parameter name="end_pos">
<parameter_description> end position
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_action_get_n_actions">
<description>
Gets the number of accessible actions available on the object.
If there are more than one, the first one is considered the
&quot;default&quot; action of the object.


</description>
<parameters>
<parameter name="action">
<parameter_description> a #GObject instance that implements AtkActionIface
</parameter_description>
</parameter>
</parameters>
<return> a the number of actions, or 0 if @action does not
implement this interface.
</return>
</function>

<function name="atk_relation_set_remove">
<description>
Removes a relation from the relation set.
This function unref&apos;s the #AtkRelation so it will be deleted unless there
is another reference to it.

</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkRelationSet
</parameter_description>
</parameter>
<parameter name="relation">
<parameter_description> an #AtkRelation
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_object_set_role">
<description>
Sets the role of the accessible.

</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
<parameter name="role">
<parameter_description> an #AtkRole to be set as the role
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_role_register">
<description>
Registers the role specified by @name.


</description>
<parameters>
<parameter name="name">
<parameter_description> a character string describing the new role.
</parameter_description>
</parameter>
</parameters>
<return> an #AtkRole for the new role.
</return>
</function>

<function name="atk_text_get_character_extents">
<description>
Get the bounding box containing the glyph representing the character at 
a particular text offset. 

</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description> The offset of the text character for which bounding information is required.
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> Pointer for the x cordinate of the bounding box
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> Pointer for the y cordinate of the bounding box
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> Pointer for the width of the bounding box
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> Pointer for the height of the bounding box
</parameter_description>
</parameter>
<parameter name="coords">
<parameter_description> specify whether coordinates are relative to the screen or widget window 
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_text_get_text">
<description>
Gets the specified text.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="start_offset">
<parameter_description> start position
</parameter_description>
</parameter>
<parameter name="end_offset">
<parameter_description> end position
</parameter_description>
</parameter>
</parameters>
<return> the text from @start_offset up to, but not including @end_offset.
</return>
</function>

<function name="atk_table_get_row_header">
<description>
Gets the row header of a specified row in an accessible table.


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="row">
<parameter_description> a #gint representing a row in the table
</parameter_description>
</parameter>
</parameters>
<return> a AtkObject* representing the specified row header, or
%NULL if value does not implement this interface.
</return>
</function>

<function name="atk_state_set_contains_state">
<description>
Checks whether the state for the specified type is in the specified set.


</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkStateSet
</parameter_description>
</parameter>
<parameter name="type">
<parameter_description> an #AtkStateType
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if @type is the state type is in @set.
</return>
</function>

<function name="atk_hyperlink_get_end_index">
<description>
Gets the index with the hypertext document at which this link ends.


</description>
<parameters>
<parameter name="link_">
<parameter_description> an #AtkHyperlink
</parameter_description>
</parameter>
</parameters>
<return> the index with the hypertext document at which this link ends
</return>
</function>

<function name="atk_action_get_localized_name">
<description>
Returns the localized name of the specified action of the object.


</description>
<parameters>
<parameter name="action">
<parameter_description> a #GObject instance that implements AtkActionIface
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> the action index corresponding to the action to be performed 
</parameter_description>
</parameter>
</parameters>
<return>a name string, or %NULL
if @action does not implement this interface.
</return>
</function>

<function name="atk_registry_set_factory_type">
<description>
Associate an #AtkObjectFactory subclass with a #GType. Note:
The associated @factory_type will thereafter be responsible for
the creation of new #AtkObject implementations for instances
appropriate for @type.

</description>
<parameters>
<parameter name="registry">
<parameter_description> the #AtkRegistry in which to register the type association
</parameter_description>
</parameter>
<parameter name="type">
<parameter_description> an #AtkObject type 
</parameter_description>
</parameter>
<parameter name="factory_type">
<parameter_description> an #AtkObjectFactory type to associate with @type.  Must
implement AtkObject appropriate for @type.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_text_attribute_get_name">
<description>
Gets the name corresponding to the #AtkTextAttribute


</description>
<parameters>
<parameter name="attr">
<parameter_description> The #AtkTextAttribute whose name is required
</parameter_description>
</parameter>
</parameters>
<return> a string containing the name; this string should not be freed
</return>
</function>

<function name="atk_action_get_description">
<description>
Returns a description of the specified action of the object.


</description>
<parameters>
<parameter name="action">
<parameter_description> a #GObject instance that implements AtkActionIface
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> the action index corresponding to the action to be performed 
</parameter_description>
</parameter>
</parameters>
<return>a description string, or %NULL
if @action does not implement this interface.
</return>
</function>

<function name="atk_attribute_set_free">
<description>
Frees the memory used by an #AtkAttributeSet, including all its
#AtkAttributes.

</description>
<parameters>
<parameter name="attrib_set">
<parameter_description> The #AtkAttributeSet to free
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_action_get_keybinding">
<description>
Returns a keybinding associated with this action, if one exists.


</description>
<parameters>
<parameter name="action">
<parameter_description> a #GObject instance that implements AtkActionIface
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> the action index corresponding to the action to be performed 
</parameter_description>
</parameter>
</parameters>
<return>a string representing the keybinding, or %NULL
if there is no keybinding for this action.

</return>
</function>

<function name="atk_text_get_text_before_offset">
<description>
Gets the specified text.

If the boundary_type if ATK_TEXT_BOUNDARY_CHAR the character before the
offset is returned.

If the boundary_type is ATK_TEXT_BOUNDARY_WORD_START the returned string
is from the word start before the word start before the offset to 
the word start before the offset.

The returned string will contain the word before the offset if the offset
is inside a word and will contain the word before the word before the 
offset if the offset is not inside a word.

If the boundary_type is ATK_TEXT_BOUNDARY_WORD_END the returned string
is from the word end before the word end at or before the offset to the 
word end at or before the offset.

The returned string will contain the word before the offset if the offset
is inside a word or if the offset is not inside a word.

If the boundary type is ATK_TEXT_BOUNDARY_SENTENCE_START the returned
string is from the sentence start before the sentence start before 
the offset to the sentence start before the offset.

The returned string will contain the sentence before the offset if the 
offset is inside a sentence and will contain the sentence before the 
sentence before the offset if the offset is not inside a sentence.

If the boundary_type is ATK_TEXT_BOUNDARY_SENTENCE_END the returned string
is from the sentence end before the sentence end at or before the offset to 
the sentence end at or before the offset.

The returned string will contain the sentence before the offset if the 
offset is inside a sentence or if the offset is not inside a sentence.

If the boundary type is ATK_TEXT_BOUNDARY_LINE_START the returned
string is from the line start before the line start ar or before the offset 
to the line start ar or before the offset.

If the boundary_type is ATK_TEXT_BOUNDARY_LINE_END the returned string
is from the line end before the line end before the offset to the 
line end before the offset.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description> position
</parameter_description>
</parameter>
<parameter name="boundary_type">
<parameter_description> An #AtkTextBoundary
</parameter_description>
</parameter>
<parameter name="start_offset">
<parameter_description> the start offset of the returned string
</parameter_description>
</parameter>
<parameter name="end_offset">
<parameter_description> the offset of the first character after the 
returned substring
</parameter_description>
</parameter>
</parameters>
<return> the text before @offset bounded by the specified @boundary_type.
</return>
</function>

<function name="atk_table_get_index_at">
<description>
Gets a #gint representing the index at the specified @row and @column.
The value -1 is returned if the object at row,column is not a child
of table or table does not implement this interface.


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="row">
<parameter_description> a #gint representing a row in @table
</parameter_description>
</parameter>
<parameter name="column">
<parameter_description> a #gint representing a column in @table
</parameter_description>
</parameter>
</parameters>
<return> a #gint representing the index at specified position 
</return>
</function>

<function name="atk_object_set_parent">
<description>
Sets the accessible parent of the accessible.

</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
<parameter name="parent">
<parameter_description> an #AtkObject to be set as the accessible parent
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_text_remove_selection">
<description>
Removes the specified selection.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="selection_num">
<parameter_description> The selection number.  The selected regions are
assigned numbers that correspond to how far the region is from the
start of the text.  The selected region closest to the beginning
of the text region is assigned the number 0, etc.  Note that adding,
moving or deleting a selected region can change the numbering.
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if success, %FALSE otherwise
</return>
</function>

<function name="atk_selection_get_selection_count">
<description>
Gets the number of accessible children currently selected.
Note: callers should not rely on %NULL or on a zero value for
indication of whether AtkSelectionIface is implemented, they should
use type checking/interface checking macros or the
atk_get_accessible_value() convenience method.


</description>
<parameters>
<parameter name="selection">
<parameter_description> a #GObject instance that implements AtkSelectionIface
</parameter_description>
</parameter>
</parameters>
<return> a gint representing the number of items selected, or 0
if @selection does not implement this interface.
</return>
</function>

<function name="atk_get_toolkit_version">
<description>
Gets version string for the GUI toolkit implementing ATK for this application.


</description>
<parameters>
</parameters>
<return> version string for the GUI toolkit implementing ATK for this application
</return>
</function>

<function name="atk_component_get_extents">
<description>
Gets the rectangle which gives the extent of the @component.


</description>
<parameters>
<parameter name="component">
<parameter_description> an #AtkComponent
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> address of #gint to put x coordinate
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> address of #gint to put y coordinate
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> address of #gint to put width
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> address of #gint to put height
</parameter_description>
</parameter>
<parameter name="coord_type">
<parameter_description> specifies whether the coordinates are relative to the screen
or to the components top level window
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_get_default_registry">
<description>
Gets a default implementation of the #AtkObjectFactory/type
registry.
Note: For most toolkit maintainers, this will be the correct
registry for registering new #AtkObject factories. Following
a call to this function, maintainers may call atk_registry_set_factory_type()
to associate an #AtkObjectFactory subclass with the GType of objects
for whom accessibility information will be provided.


</description>
<parameters>
</parameters>
<return> a default implementation of the #AtkObjectFactory/type
registry
</return>
</function>

<function name="atk_registry_get_factory">
<description>
Gets an #AtkObjectFactory appropriate for creating #AtkObjects
appropriate for @type.


</description>
<parameters>
<parameter name="registry">
<parameter_description> an #AtkRegistry
</parameter_description>
</parameter>
<parameter name="type">
<parameter_description> a #GType with which to look up the associated #AtkObjectFactory
</parameter_description>
</parameter>
</parameters>
<return> an #AtkObjectFactory appropriate for creating #AtkObjects
appropriate for @type.
</return>
</function>

<function name="atk_state_set_xor_sets">
<description>
Constructs the exclusive-or of the two sets, returning %NULL is empty.
The set returned by this operation contains the states in exactly
one of the two sets.


</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkStateSet
</parameter_description>
</parameter>
<parameter name="compare_set">
<parameter_description> another #AtkStateSet
</parameter_description>
</parameter>
</parameters>
<return> a new #AtkStateSet which contains the states which are 
in exactly one of the two sets.
</return>
</function>

<function name="atk_state_set_or_sets">
<description>
Constructs the union of the two sets.


</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkStateSet
</parameter_description>
</parameter>
<parameter name="compare_set">
<parameter_description> another #AtkStateSet
</parameter_description>
</parameter>
</parameters>
<return> a new #AtkStateSet which is the union of the two sets,
returning %NULL is empty.
</return>
</function>

<function name="atk_component_get_size">
<description>
Gets the size of the @component in terms of width and height.

</description>
<parameters>
<parameter name="component">
<parameter_description> an #AtkComponent
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> address of #gint to put width of @component
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> address of #gint to put height of @component
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_text_get_caret_offset">
<description>
Gets the offset position of the caret (cursor).


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
</parameters>
<return> the offset position of the caret (cursor).
</return>
</function>

<function name="atk_relation_set_get_relation_by_type">
<description>
Finds a relation that matches the specified type.


</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkRelationSet
</parameter_description>
</parameter>
<parameter name="relationship">
<parameter_description> an #AtkRelationType
</parameter_description>
</parameter>
</parameters>
<return> an #AtkRelation, which is a relation matching the specified type.
</return>
</function>

<function name="atk_object_factory_invalidate">
<description>
Inform @factory that it is no longer being used to create
accessibles. When called, @factory may need to inform
#AtkObjects which it has created that they need to be re-instantiated.
Note: primarily used for runtime replacement of #AtkObjectFactorys
in object registries.

</description>
<parameters>
<parameter name="factory">
<parameter_description> an #AtkObjectFactory to invalidate
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_table_get_row_description">
<description>
Gets the description text of the specified row in the table


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="row">
<parameter_description> a #gint representing a row in @table
</parameter_description>
</parameter>
</parameters>
<return> a gchar* representing the row description, or %NULL
if value does not implement this interface.
</return>
</function>

<function name="atk_state_set_and_sets">
<description>
Constructs the intersection of the two sets, returning %NULL if the
intersection is empty.


</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkStateSet
</parameter_description>
</parameter>
<parameter name="compare_set">
<parameter_description> another #AtkStateSet
</parameter_description>
</parameter>
</parameters>
<return> a new #AtkStateSet which is the intersection of the two sets.
</return>
</function>

<function name="atk_table_remove_column_selection">
<description>
Adds the specified @column to the selection. 


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="column">
<parameter_description> a #gint representing a column in @table
</parameter_description>
</parameter>
</parameters>
<return> a gboolean representing if the column was successfully removed from
the selection, or 0 if value does not implement this interface.
</return>
</function>

<function name="atk_table_get_row_at_index">
<description>
Gets a #gint representing the row at the specified @index_, or -1
if the table does not implement this interface


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableInterface
</parameter_description>
</parameter>
<parameter name="index_">
<parameter_description> a #gint representing an index in @table
</parameter_description>
</parameter>
</parameters>
<return> a gint representing the row at the specified index.
</return>
</function>

<function name="atk_action_set_description">
<description>
Sets a description of the specified action of the object.


</description>
<parameters>
<parameter name="action">
<parameter_description> a #GObject instance that implements AtkActionIface
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> the action index corresponding to the action to be performed 
</parameter_description>
</parameter>
<parameter name="desc">
<parameter_description> the description to be assigned to this action
</parameter_description>
</parameter>
</parameters>
<return> a gboolean representing if the description was successfully set;
</return>
</function>

<function name="atk_component_set_size">
<description>
Set the size of the @component in terms of width and height.


</description>
<parameters>
<parameter name="component">
<parameter_description> an #AtkComponent
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> width to set for @component
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> height to set for @component
</parameter_description>
</parameter>
</parameters>
<return> %TRUE or %FALSE whether the size was set or not
</return>
</function>

<function name="atk_value_set_current_value">
<description>
Sets the value of this object.


</description>
<parameters>
<parameter name="obj">
<parameter_description> a GObject instance that implements AtkValueIface
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> a #GValue which is the desired new accessible value.
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if new value is successfully set, %FALSE otherwise.
</return>
</function>

<function name="atk_remove_global_event_listener">
<description>
Removes the specified event listener

</description>
<parameters>
<parameter name="listener_id">
<parameter_description> the id of the event listener to remove
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_add_global_event_listener">
<description>
Adds the specified function to the list of functions to be called
when an event of type event_type occurs.


</description>
<parameters>
<parameter name="listener">
<parameter_description> the listener to notify
</parameter_description>
</parameter>
<parameter name="event_type">
<parameter_description> the type of event for which notification is requested
</parameter_description>
</parameter>
</parameters>
<return> added event listener id, or 0 on failure.
</return>
</function>

<function name="atk_table_ref_at">
<description>
Get a reference to the table cell at @row, @column.


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="row">
<parameter_description> a #gint representing a row in @table
</parameter_description>
</parameter>
<parameter name="column">
<parameter_description> a #gint representing a column in @table
</parameter_description>
</parameter>
</parameters>
<return> a AtkObject* representing the referred to accessible
</return>
</function>

<function name="atk_object_get_name">
<description>
Gets the accessible name of the accessible.


</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
</parameters>
<return> a character string representing the accessible name of the object.
</return>
</function>

<function name="atk_object_remove_property_change_handler">
<description>
Removes a property change handler.

</description>
<parameters>
<parameter name="accessible">
<parameter_description> an #AtkObject
</parameter_description>
</parameter>
<parameter name="handler_id">
<parameter_description> a guint which identifies the handler to be removed.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_table_get_summary">
<description>
Gets the summary description of the table.


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
</parameters>
<return> a AtkObject* representing a summary description of the table,
or zero if value does not implement this interface.
</return>
</function>

<function name="atk_editable_text_set_text_contents">
<description>
Set text contents of @text.

</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkEditableText
</parameter_description>
</parameter>
<parameter name="string">
<parameter_description> string to set for text contents of @text
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_state_set_is_empty">
<description>
Checks whether the state set is empty, i.e. has no states set.


</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkStateType
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if @set has no states set, otherwise %FALSE
</return>
</function>

<function name="atk_value_get_maximum_value">
<description>
Gets the maximum value of this object.

</description>
<parameters>
<parameter name="obj">
<parameter_description> a GObject instance that implements AtkValueIface
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> a #GValue representing the maximum accessible value
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_relation_set_get_n_relations">
<description>
Determines the number of relations in a relation set.


</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkRelationSet
</parameter_description>
</parameter>
</parameters>
<return> an integer representing the number of relations in the set.
</return>
</function>

<function name="atk_text_get_text_after_offset">
<description>
Gets the specified text.

If the boundary_type if ATK_TEXT_BOUNDARY_CHAR the character after the 
offset is returned.

If the boundary_type is ATK_TEXT_BOUNDARY_WORD_START the returned string
is from the word start after the offset to the next word start.

The returned string will contain the word after the offset if the offset 
is inside a word or if the offset is not inside a word.

If the boundary_type is ATK_TEXT_BOUNDARY_WORD_END the returned string
is from the word end at or after the offset to the next work end.

The returned string will contain the word after the offset if the offset
is inside a word and will contain the word after the word after the offset
if the offset is not inside a word.

If the boundary type is ATK_TEXT_BOUNDARY_SENTENCE_START the returned
string is from the sentence start after the offset to the next sentence
start.

The returned string will contain the sentence after the offset if the offset
is inside a sentence or if the offset is not inside a sentence.

If the boundary_type is ATK_TEXT_BOUNDARY_SENTENCE_END the returned string
is from the sentence end at or after the offset to the next sentence end.

The returned string will contain the sentence after the offset if the offset
is inside a sentence and will contain the sentence after the sentence
after the offset if the offset is not inside a sentence.

If the boundary type is ATK_TEXT_BOUNDARY_LINE_START the returned
string is from the line start after the offset to the next line start.

If the boundary_type is ATK_TEXT_BOUNDARY_LINE_END the returned string
is from the line end at or after the offset to the next line start.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkText
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description> position
</parameter_description>
</parameter>
<parameter name="boundary_type">
<parameter_description> An #AtkTextBoundary
</parameter_description>
</parameter>
<parameter name="start_offset">
<parameter_description> the start offset of the returned string
</parameter_description>
</parameter>
<parameter name="end_offset">
<parameter_description> the offset of the first character after the 
returned substring
</parameter_description>
</parameter>
</parameters>
<return> the text after @offset bounded by the specified @boundary_type.
</return>
</function>

<function name="atk_image_get_image_size">
<description>
Get the width and height in pixels for the specified image.
The values of @width and @height are returned as -1 if the
values cannot be obtained.

</description>
<parameters>
<parameter name="image">
<parameter_description> a #GObject instance that implements AtkImageIface
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> filled with the image width
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> filled with the image height
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_relation_set_add">
<description>
Add a new relation to the current relation set if it is not already
present.
This function ref&apos;s the AtkRelation so the caller of this function
should unref it to ensure that it will be destroyed when the AtkRelationSet
is destroyed.

</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkRelationSet
</parameter_description>
</parameter>
<parameter name="relation">
<parameter_description> an #AtkRelation
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_editable_text_set_run_attributes">
<description>
Sets the attributes for a specified range. See the ATK_ATTRIBUTE
macros (such as #ATK_ATTRIBUTE_LEFT_MARGIN) for examples of attributes 
that can be set. Note that other attributes that do not have corresponding
ATK_ATTRIBUTE macros may also be set for certain text widgets.


</description>
<parameters>
<parameter name="text">
<parameter_description> an #AtkEditableText
</parameter_description>
</parameter>
<parameter name="attrib_set">
<parameter_description> an #AtkAttributeSet
</parameter_description>
</parameter>
<parameter name="start_offset">
<parameter_description> start of range in which to set attributes
</parameter_description>
</parameter>
<parameter name="end_offset">
<parameter_description> end of range in which to set attributes
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if attributes successfully set for the specified
range, otherwise %FALSE
</return>
</function>

<function name="atk_table_get_column_extent_at">
<description>
Gets the number of columns occupied by the accessible object
at the specified @row and @column in the @table.


</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="row">
<parameter_description> a #gint representing a row in @table
</parameter_description>
</parameter>
<parameter name="column">
<parameter_description> a #gint representing a column in @table
</parameter_description>
</parameter>
</parameters>
<return> a gint representing the column extent at specified position, or 0
if value does not implement this interface.
</return>
</function>

<function name="atk_state_set_add_states">
<description>
Add the states for the specified types to the current state set.

</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkStateSet
</parameter_description>
</parameter>
<parameter name="types">
<parameter_description> an array of #AtkStateType
</parameter_description>
</parameter>
<parameter name="n_types">
<parameter_description> The number of elements in the array
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_state_type_for_name">
<description>
Gets the #AtkStateType corresponding to the description string @name.


</description>
<parameters>
<parameter name="name">
<parameter_description> a character string state name
</parameter_description>
</parameter>
</parameters>
<return> an #AtkStateType corresponding to @name 
</return>
</function>

<function name="atk_hypertext_get_link_index">
<description>
Gets the index into the array of hyperlinks that is associated with
the character specified by @char_index, or -1 if there is no hyperlink
associated with this character.


</description>
<parameters>
<parameter name="hypertext">
<parameter_description> an #AtkHypertext
</parameter_description>
</parameter>
<parameter name="char_index">
<parameter_description> a character index
</parameter_description>
</parameter>
</parameters>
<return> an index into the array of hyperlinks in @hypertext
</return>
</function>

<function name="atk_object_add_relationship">
<description>
Adds a relationship of the specified type with the specified target.


</description>
<parameters>
<parameter name="object">
<parameter_description> The #AtkObject to which an AtkRelation is to be added. 
</parameter_description>
</parameter>
<parameter name="relationship">
<parameter_description> The #AtkRelationType of the relation
</parameter_description>
</parameter>
<parameter name="target">
<parameter_description> The #AtkObject which is to be the target of the relation.
</parameter_description>
</parameter>
</parameters>
<return>TRUE if the relationship is added.
</return>
</function>

<function name="atk_table_set_column_header">
<description>
Sets the specified column header to @header.

</description>
<parameters>
<parameter name="table">
<parameter_description> a GObject instance that implements AtkTableIface
</parameter_description>
</parameter>
<parameter name="column">
<parameter_description> a #gint representing a column in @table
</parameter_description>
</parameter>
<parameter name="header">
<parameter_description> an #AtkTable
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_component_remove_focus_handler">
<description>
Remove the handler specified by @handler_id from the list of
functions to be executed when this object receives focus events 
(in or out).

</description>
<parameters>
<parameter name="component">
<parameter_description> the #AtkComponent to remove the focus handler from
</parameter_description>
</parameter>
<parameter name="handler_id">
<parameter_description> the handler id of the focus handler to be removed
from @component
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_state_set_add_state">
<description>
Add a new state for the specified type to the current state set if
it is not already present.


</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkStateSet
</parameter_description>
</parameter>
<parameter name="type">
<parameter_description> an #AtkStateType
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if  the state for @type is not already in @set.
</return>
</function>

<function name="atk_value_get_current_value">
<description>
Gets the value of this object.

</description>
<parameters>
<parameter name="obj">
<parameter_description> a GObject instance that implements AtkValueIface
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> a #GValue representing the current accessible value
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_state_set_contains_states">
<description>
Checks whether the states for all the specified types are in the 
specified set.


</description>
<parameters>
<parameter name="set">
<parameter_description> an #AtkStateSet
</parameter_description>
</parameter>
<parameter name="types">
<parameter_description> an array of #AtkStateType
</parameter_description>
</parameter>
<parameter name="n_types">
<parameter_description> The number of elements in the array
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if all the states for @type are in @set.
</return>
</function>

<function name="atk_remove_key_event_listener">
<description>
Removes the specified event listener

</description>
<parameters>
<parameter name="listener_id">
<parameter_description> the id of the event listener to remove
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="atk_hypertext_get_n_links">
<description>
Gets the number of links within this hypertext document.


</description>
<parameters>
<parameter name="hypertext">
<parameter_description> an #AtkHypertext
</parameter_description>
</parameter>
</parameters>
<return> the number of links within this hypertext document
</return>
</function>

<function name="atk_streamable_content_get_mime_type">
<description>
Gets the character string of the specified mime type. The first mime
type is at position 0, the second at position 1, and so on.


</description>
<parameters>
<parameter name="streamable">
<parameter_description> a GObject instance that implements AtkStreamableContent
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> a gint representing the position of the mime type starting from 0
</parameter_description>
</parameter>
</parameters>
<return>: a gchar* representing the specified mime type; the caller
should not free the character string.
</return>
</function>

<function name="atk_selection_add_selection">
<description>
Adds the specified accessible child of the object to the
object&apos;s selection.


</description>
<parameters>
<parameter name="selection">
<parameter_description> a #GObject instance that implements AtkSelectionIface
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> a #gint specifying the child index.
</parameter_description>
</parameter>
</parameters>
<return> TRUE if success, FALSE otherwise.
</return>
</function>

<function name="atk_hyperlink_get_uri">
<description>
Get a the URI associated with the anchor specified 
by @i of @link_. 

Multiple anchors are primarily used by client-side image maps.


</description>
<parameters>
<parameter name="link_">
<parameter_description> an #AtkHyperlink
</parameter_description>
</parameter>
<parameter name="i">
<parameter_description> a (zero-index) integer specifying the desired anchor
</parameter_description>
</parameter>
</parameters>
<return> a string specifying the URI 
</return>
</function>

</root>
