/* $Id: scrollbar.hg,v 1.1 2003/01/21 13:40:36 murrayc Exp $ */

/* scrollbar.h
 * 
 * Copyright (C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtkmm/range.h>
_DEFS(gtkmm,gtk)
_DEFS(gtkmm,gtk)
_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/range_p.h)


namespace Gtk
{

/** 
 * The Gtk::Scrollbar widget is an abstract base class for Gtk::HScrollbar
 * and Gtk::VScrollbar. It is not very useful in itself. 
 *
 * The position of the thumb in a scrollbar is controlled by the scroll
 * adjustments. See Gtk::Adjustment for the fields in an adjustment - for
 * Gtk::Scrollbar, the "value" field represents the position of the scrollbar,
 * which must be between the "lower" field and "upper - page_size." The
 * "page_size" field represents the size of the visible scrollable area. The
 * "step_increment" and "page_increment" fields are used when the user asks
 * to step down (using the small stepper arrows) or page down (using for
 * example the PageDown key).
 *
 * @ingroup Widgets
 */
class Scrollbar : public Range
{
  _CLASS_GTKOBJECT(Scrollbar,GtkScrollbar,GTK_SCROLLBAR,Gtk::Range,GtkRange)

protected:
  
};

/** A vertical scrollbar.
 *
 * The Gtk::VScrollbar widget is a widget arranged vertically creating a
 * scrollbar. See Gtk::Scrollbar for details on scrollbars.
 *
 * A Gtk::Adjustment may may be passed to the constructor  to handle the
 * adjustment of the scrollbar. If not specified, one will be created for
 * you. See Gtk::Adjustment for details.
 *
 * @ingroup Widgets
 */
class VScrollbar : public Scrollbar
{
  _CLASS_GTKOBJECT(VScrollbar,GtkVScrollbar,GTK_VSCROLLBAR,Gtk::Scrollbar,GtkScrollbar)
public:
  VScrollbar();
  explicit VScrollbar(Adjustment& gtkadjustment);
  
};

/** A horizontal scrollbar.
 *
 * The Gtk::HScrollbar widget is a widget arranged horizontally creating a
 * scrollbar. See Gtk::Scrollbar for details on scrollbars.
 *
 * A Gtk::Adjustment may may be passed to the constructor  to handle the
 * adjustment of the scrollbar. If not specified, one will be created for
 * you. See Gtk::Adjustment for details.
 *
 * @ingroup Widgets
 */
class HScrollbar : public Scrollbar
{
  _CLASS_GTKOBJECT(HScrollbar,GtkHScrollbar,GTK_HSCROLLBAR,Gtk::Scrollbar,GtkScrollbar)
public:
  HScrollbar();
  explicit HScrollbar(Adjustment& gtkadjustment);
  
};


} /* namespace Gtk */

