// -*- c++ -*-
/* $Id: imagemenuitem.ccg,v 1.2 2003/10/28 17:12:27 murrayc Exp $ */

/* 
 *
 * Copyright 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtk/gtkimagemenuitem.h>

#include <gtkmm/image.h>
#include <gtkmm/stock.h>
#include <gtkmm/accellabel.h>

namespace Gtk
{

ImageMenuItem::ImageMenuItem(Widget& image, 
                             const Glib::ustring& label, bool mnemonic)
:
  _CONSTRUCT()
{
  set_image(image);
  add_accel_label(label, mnemonic);
}

ImageMenuItem::ImageMenuItem(const Glib::ustring& label, bool mnemonic)
:
  _CONSTRUCT()
{
  add_accel_label(label, mnemonic);
}

ImageMenuItem::ImageMenuItem(const Gtk::StockID& stock_id)
:
  _CONSTRUCT()
{
  Gtk::Image* image = new Gtk::Image(stock_id, ICON_SIZE_MENU);
  image->show();
  set_image( *(Gtk::manage(image)) );

  Gtk::StockItem item;
  if(Gtk::Stock::lookup(stock_id, item))
  {
    add_accel_label(item.get_label(), true); //true = use mnemonic.
    set_accel_key( AccelKey(item.get_keyval(), item.get_modifier()) );
  }
  else
  {
    add_accel_label(stock_id.get_string(), false);
  }
}

} // namespace Gtk

