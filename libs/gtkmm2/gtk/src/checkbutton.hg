/* $Id: checkbutton.hg,v 1.2 2004/01/19 19:48:44 murrayc Exp $ */

/* checkbutton.h
 * 
 * Copyright (C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtkmm/togglebutton.h>
_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/togglebutton_p.h)

namespace Gtk
{

/** Create widgets with a discrete toggle button.
 *
 * A Gtk::CheckButton places a discrete Gtk::ToggleButton next to a widget,
 * (usually a Gtk::Label).  See Gtk::ToggleButton widgets for more
 * information about toggle/check buttons.  The important signal,
 * signal_toggled() is also inherited from Gtk::ToggleButton.
 *
 * @ingroup Widgets
 */
class CheckButton : public ToggleButton
{
  _CLASS_GTKOBJECT(CheckButton,GtkCheckButton,GTK_CHECK_BUTTON,Gtk::ToggleButton,GtkToggleButton)
public:

  /** Create an empty check button.
   * With an empty button, you can Gtk::Button::add() a widget such as a
   * Gtk::Pixmap or Gtk::Box.
   *
   * If you just wish to add a Gtk::Label, you may want to use the
   * Gtk::CheckButton(const Glib::ustring &label) constructor directly
   * instead.
   */
  _CTOR_DEFAULT

  /** Create a check button with a label.
   * You won't be able to add a widget to this button since it already
   * contains a Gtk::Label
   */
  explicit CheckButton(const Glib::ustring& label, bool mnemonic = false);
  

protected:
  /** Emited on button redraw to update indicator.
   * Triggered when the button is redrawn (e.g.after being toggled)
   * Overload this signal if you want to implement your own check button
   * look. Otherwise, you most likely don't care about it.
   * The GdkRectangle specifies the area of the widget which will get
   * redrawn.
   */
  _WRAP_VFUNC(void draw_indicator(GdkRectangle* area), "draw_indicator")
  
};


} /* namespace Gtk */

