/* $Id: stockitem.hg,v 1.2 2004/04/11 21:00:53 murrayc Exp $ */

/* Copyright(C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software, ) you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation, ) either
 * version 2 of the License, or(at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY, ) without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library, ) if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gdkmm/types.h>
#include <gtkmm/stockid.h>

_DEFS(gtkmm,gtk)

#ifndef DOXYGEN_SHOULD_SKIP_THIS
extern "C"
{
  typedef struct _GtkStockItem GtkStockItem;
}
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

namespace Gtk
{

class StockItem
{
  _CLASS_OPAQUE_COPYABLE(StockItem, GtkStockItem, NONE, gtk_stock_item_copy, gtk_stock_item_free)

public:
  StockItem(const Gtk::StockID& stock_id, const Glib::ustring& label,
            Gdk::ModifierType modifier = Gdk::ModifierType(0), unsigned int keyval = 0,
            const Glib::ustring& translation_domain = Glib::ustring());

  _MEMBER_GET(stock_id, stock_id, StockID, char*)
  _MEMBER_GET(label, label, Glib::ustring, char*)
  _MEMBER_GET(modifier, modifier, Gdk::ModifierType, GdkModifierType)
  _MEMBER_GET(keyval, keyval, guint, guint)
  _MEMBER_GET(translation_domain, translation_domain, Glib::ustring, char*)

  static bool lookup(const Gtk::StockID& stock_id, Gtk::StockItem& item);
};

} // namespace Gtk

