/* $Id: statusbar.hg,v 1.2 2003/10/12 09:38:11 murrayc Exp $ */

/* statusbar.h
 * 
 * Copyright (C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtkmm/box.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/box_p.h)

namespace Gtk
{

/** Text status indicator
 * This widget is used to display status information.
 * Messages are pushed and poped onto a message stack.
 * When text is pushed it replaces the old contents.
 * The old text is restored when popped.
 *
 * It derives from Gtk::HBox so that additional information can be added
 * easily.
 *
 * @ingroup Widgets
 */
class Statusbar : public HBox
{
  _CLASS_GTKOBJECT(Statusbar,GtkStatusbar,GTK_STATUSBAR,Gtk::HBox,GtkHBox)
  _IGNORE(gtk_statusbar_push, gtk_statusbar_remove)
public:
  _CTOR_DEFAULT

  _WRAP_METHOD(guint get_context_id(const Glib::ustring& context_description), gtk_statusbar_get_context_id)
  guint push(const Glib::ustring& text, guint context_id = 0);
  _WRAP_METHOD(void pop(guint context_id = 0), gtk_statusbar_pop)
  void remove_message(guint message_id, guint context_id = 0);
  _WRAP_METHOD(void set_has_resize_grip(bool setting = true), gtk_statusbar_set_has_resize_grip)
  _WRAP_METHOD(bool get_has_resize_grip() const, gtk_statusbar_get_has_resize_grip)

  _WRAP_SIGNAL(void text_pushed(guint context_id, const Glib::ustring& text), "text_pushed")
  _WRAP_SIGNAL(void text_popped(guint context_id, const Glib::ustring& text), "text_popped")

  _WRAP_PROPERTY("has_resize_grip", bool)
};

} /* namespace Gtk */

