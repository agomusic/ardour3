/* $Id: inputdialog.hg,v 1.4 2005/11/29 16:38:10 murrayc Exp $ */

/* inputdialog.h
 * 
 * Copyright (C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

// This is for including the config header before any code (such as
// the #ifndef GTKMM_DISABLE_DEPRECATED in deprecated classes) is generated:
_CONFIGINCLUDE(gtkmmconfig.h)

#include <gtkmm/dialog.h>
_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/dialog_p.h)

namespace Gtk
{

class Button;
class Table;

_DEPRECATE_IFDEF_START
class OptionMenu;
_DEPRECATE_IFDEF_END

class ScrolledWindow;

// Don't list this in the documentation's Dialogs group because it isn't really useful
// - see the GTK+ docs.
class InputDialog : public Dialog
{
  _CLASS_GTKOBJECT(InputDialog,GtkInputDialog,GTK_INPUT_DIALOG,Gtk::Dialog,GtkDialog)
  _UNMANAGEABLE
public:

  _CTOR_DEFAULT
  

  _MEMBER_GET_PTR(axis_list,axis_list,Table*,GtkWidget*)
  _MEMBER_GET_PTR(axis_box,axis_listbox,ScrolledWindow*,GtkWidget*)
  _MEMBER_GET_PTR(mode_optionmenu,mode_optionmenu,OptionMenu*,GtkWidget*,deprecated)

  _MEMBER_GET_PTR(close_button,close_button,Button*,GtkWidget*)
  _MEMBER_GET_PTR(save_button,save_button,Button*,GtkWidget*)

  //GtkWidget *axis_items[GDK_AXIS_LAST];

  _MEMBER_GET_GOBJECT(current_device, current_device, Gdk::Device, GdkDevice*)

  _MEMBER_GET_PTR(keys_list,keys_list,Table*,GtkWidget*)
  _MEMBER_GET_PTR(keys_box,keys_listbox,ScrolledWindow*,GtkWidget*)

#m4 _CONVERSION(`GdkDevice*',`const Glib::RefPtr<Gdk::Device>&', `Glib::wrap($3, true)')
  _WRAP_SIGNAL(void enable_device(const Glib::RefPtr<Gdk::Device>& device), "enable_device")
  _WRAP_SIGNAL(void disable_device(const Glib::RefPtr<Gdk::Device>& device), "disable_device")
};

} /* namespace Gtk */

