// -*- c++ -*-
// Generated by gtkmmproc -- DO NOT MODIFY!
#ifndef _LIBGNOMECANVASMM_ITEM_P_H
#define _LIBGNOMECANVASMM_ITEM_P_H


#include <gtkmm/private/object_p.h>

#include <glibmm/class.h>

namespace Gnome
{

namespace Canvas
{

class Item_Class : public Glib::Class
{
public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef Item CppObjectType;
  typedef GnomeCanvasItem BaseObjectType;
  typedef GnomeCanvasItemClass BaseClassType;
  typedef Gtk::Object_Class CppClassParent;
  typedef GtkObjectClass BaseClassParent;

  friend class Item;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  const Glib::Class& init();

  static void class_init_function(void* g_class, void* class_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.
  static gboolean event_callback(GnomeCanvasItem* self, GdkEvent* p0);

  //Callbacks (virtual functions):
#ifdef GLIBMM_VFUNCS_ENABLED
  static void update_vfunc_callback(GnomeCanvasItem* self, double* affine, ArtSVP* clip_path, int flags);
  static void realize_vfunc_callback(GnomeCanvasItem* self);
  static void unrealize_vfunc_callback(GnomeCanvasItem* self);
  static void map_vfunc_callback(GnomeCanvasItem* self);
  static void unmap_vfunc_callback(GnomeCanvasItem* self);
  static ArtUta* coverage_vfunc_callback(GnomeCanvasItem* self);
  static void draw_vfunc_callback(GnomeCanvasItem* self, GdkDrawable* drawable, int x, int y, int width, int height);
  static void render_vfunc_callback(GnomeCanvasItem* self, GnomeCanvasBuf* buf);
  static double point_vfunc_callback(GnomeCanvasItem* self, double x, double y, int cx, int cy, GnomeCanvasItem** actual_item);
  static void bounds_vfunc_callback(GnomeCanvasItem* self, double* x1, double* y1, double* x2, double* y2);
#endif //GLIBMM_VFUNCS_ENABLED
};


} // namespace Canvas

} // namespace Gnome


#endif /* _LIBGNOMECANVASMM_ITEM_P_H */

