# -*- python -*-

import os
import os.path
import glob

Import('env final_prefix install_prefix final_config_prefix libraries i18n')

tranzport = env.Clone()

#
# this defines the version number of libardour_tranzport
# 

domain = 'ardour_tranzport'

tranzport.Append(DOMAIN = domain, MAJOR = 1, MINOR = 0, MICRO = 0)
tranzport.Append(CXXFLAGS = "-DPACKAGE=\\\"" + domain + "\\\"")
tranzport.Append(CXXFLAGS="-DLIBSIGC_DISABLE_DEPRECATED")
tranzport.Append(PACKAGE = domain)
tranzport.Append(POTFILE = domain + '.pot')

tranzport_files=Split("""
interface.cc
buttons.cc
io.cc
io_usb.cc
panner.cc
lights.cc
screen.cc
state.cc
wheel_modes.cc
button_events.cc
general.cc
lcd.cc
mode.cc
show.cc
init.cc
wheel.cc
""")

#figure out when to do
#io_usb.cc
#io_midi.cc
#io_kernel.cc

tranzport.Append(CCFLAGS="-D_REENTRANT -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE")
tranzport.Append(CXXFLAGS="-DDATA_DIR=\\\""+final_prefix+"/share\\\"")
tranzport.Append(CXXFLAGS="-DCONFIG_DIR=\\\""+final_config_prefix+"\\\"")
tranzport.Append(CXXFLAGS="-DLOCALEDIR=\\\""+final_prefix+"/share/locale\\\"")
#if env['HAVE_TRANZPORT_KERNEL_DRIVER']:
#    tranzport.Append(CXXFLAGS="-DHAVE_TRANZPORT_KERNEL_DRIVER=1")

#merge more into tranzport files for the right io lib
tranzport.Append(CPPPATH = libraries['jack'].get('CPPPATH', []))

tranzport.Merge ([
    libraries['ardour'],
    libraries['ardour_cp'],
    libraries['sigc2'],
    libraries['pbd'],
    libraries['midi++2'],
    libraries['xml'],
    libraries['glib2'],
    libraries['glibmm2'],
    libraries['usb'],
    libraries['sndfile']
    ])

libardour_tranzport = tranzport.SharedLibrary('ardour_tranzport', tranzport_files)

if tranzport['TRANZPORT']:
    Default(libardour_tranzport)
    if env['NLS']:
        i18n (tranzport, tranzport_files, env)
#    if env['HAVE_TRANZPORT_KERNEL_DRIVER']:
#        tranzport.Merge([ libraries['usb'] ])
    env.Alias('install', env.Install(os.path.join(install_prefix, env['LIBDIR'], 'ardour3', 'surfaces'), libardour_tranzport))

env.Alias('tarball', env.Distribute (env['DISTTREE'],
                     [ 'SConscript' ] +
                     tranzport_files + 
                     glob.glob('po/*.po') + glob.glob('*.h')))
