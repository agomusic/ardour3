
			    RELEASE NOTES
                           ***************  

>>>> 0.9beta13

beta13 is mostly bug fixes and a few new features over beta12.

>>>  0.9beta12

Welcome to the 0.9beta12 release of Ardour. We are now moving ever
closer to a 1.0 release. This release includes an incredible number of
changes and improvements since beta11. We expect some instabilities
compared to beta11 to remain - please test, collect debug traces,
etc. etc.

		  +++++ FIRST IMPORTANT NOTICE +++++

Although beta12 will load sessions created by earlier versions of
Ardour, if it is allowed to save a session at any time, that session
will immediately be INCOMPATIBLE WITH ALL PRIOR VERSIONS OF ARDOUR.

If you have important sessions, you are advised to back up the session
state files (generally called <session-name>/<session-name>.ardour). 

I repeat: if you care about being able to use prior versions of Ardour
on your existing sessions, you MUST BACKUP YOUR SESSION STATE FILES.

Please rest assured that after 1.0 appears, no incompatibility,
forward or backwards, will be tolerated in any future version.

		 +++++ SECOND IMPORTANT NOTICE +++++

Why the change in the session files? At some point as work on beta12
was in progress, we realized that Ardour's panning model was
fundamentally broken. Not just the mathematics of the pan law, but the
actual software architecture of panning. Fixing this has required a
massive set of changes to Ardour's basic data flow and a lot of subtle
and not-so-subtle  changes to a lot of code. On the plus side, we now
have a completely modular panning architecture that will make it
trivial, mostly, to use plugins for panning in the future.

		 ++++++ THIRD IMPORTANT NOTICE ++++++

ardour/ksi is no longer built by default. The changes to libardour are
massive and widespread, and I do not have the resources to spend time
getting ardour/ksi to catch up with them. I will reenable default
building if and when ardour/ksi compiles again. I wish I could spend
time on this, but the work is just too much at a time when I
desperately need to get Ardour to a reasonable 1.0 release.

		 +++++ FOURTH IMPORTANT NOTICE +++++

This version of ardour will NOT compile with gcc 2.95. we are now
using the standard C++ class "stringstream", which has no support in
gcc2.95. i will accept patches that attempt to use the gcc class
"strstream", but i am not willing to spend time on this myself.
	    

		       Changes since 0.9beta11
		       ------------------------

A) PANNING

    * panning control is per-stream
         code is now supporting the notion of the "number of active
         streams" within various parts of a signal processing
         "route". this is different and orthogonal from the number of
         inputs and outputs the route has. if you put a 1in/2out
         plugin into a 1in/1out route (which arguably should not be
         possible), then before the plugin there is 1 active stream,
         and afterwards there are 2. 

    * panner linkage
         - panners for all streams/channels can be moved
	   together or in opposing motion.

    * new "bar controllers" for controlling panning to 
            a stereo output, 1 per data stream
    * dbl-click on the bar controller to get numerical
            entry, then Return or Tab to get back
	    to graphics.      

B) AUTOMATION
   ----------

    * gain and pan automation now totally separated
           - you can playback pan automation while
	     doing touch automation on gain.
    * if playing automation, and playhead goes past
              the last control point, value remains
	      at that level.
    * one button for gain automation state and one for
       pan automation state per mixer strip
    * ignore the automation mode for now
    * touch automation for panning now works.
    * hide all automation control points, display them
       only as mouse pointer moves through them
    * automation values reflected after transport stop
       or locate if automation is not off, or when
       automation is turned on.

C) PLUGIN GUIs
   -----------  
    * use bar controllers (see Panning above) instead of sliders

D) OTHER MAJOR FUNCTIONALITY
   -------------------

  * initial support for win32/x86 VST plugins as native objects
       in Ardour

   * Added exclusive solo operation (ctrl-alt click on solo button)
     which sets that track to be the only soloed track.  it has a
     momentary counterpart (ctrl-alt middle-click) which temporarily
     exclusively solos the track while the mouse button is pressed.
     BTW, middle-clicking mute buttons is momentary mute as well.

  * Added seamless looping.  this can be enabled in the options editor
     (misc tab).  why is this an option you ask?  well, our current
     looping scheme simply does a transport reposition at the end of the
     loop, and while completely sample accurate, there can be a time gap
     between the end of the loop and the beginning.  This happens due to
     the slow-sync jack transport system, to allow all clients to
     reposition in sync (including ardour).   However, if you need truly
     seamless looping with no gap, you can enable this option which will do
     it within ardour only -- you must disable ardour as the jack
     transport/time master for it to work. In the near future, the Jack
     transport system may acquire a notion of looping, and at that time,
     seamless may be used at any time.

     Note that for full compatibility with other transport aware apps, the
     normal (non-seamless) looping with ardour as jack transport master is
     required and is still quite usable, so don't be discouraged from using it.

  * drag-n-drop from a file manager implemented for 
      placing audio files into audio tracks

  * LADSPA Presets are now saved in RDF format in
      ~/.ladspa/rdf/ardour-presets.n3. Ardour will also 
      read any other RDF files saved in that location.

  * region list redesigned

  * mouse wheel events now scroll canvas, not change mouse mode

  * always store to current snapshot file, do not make read-only
         anymore (might cause problems on older sessions with
           snapshots if editing the snapshot)

  * mouse shuttle mode (the return of "scrub")
       a new widget replaces the ffwd/rev buttons to provide
       continuous speed control in forward and reverse directions.
       	  
  * Added option to update actively recording regions with waveforms.
       Much cooler than just the pink boxes, eh?  On by default, you
       can turn it back to the plain pink boxes from the display tab
       of the options window.    

B) MINOR IMPROVEMENTS + BUG FIXES
   ------------------------------

  * correct handling of JACK transport API when transport master
  * improved handling of SMPTE timecode 
       - SMPTE frames-per-second can be edited from the options editor
       - SMPTE offset (what absolute time with respect to audio frame
           zero is SMPTE 0:0:0:0) can be edited from the options
	   editor 
       - correct drop frame calculations
  * fix for "Destroy Last Capture" bug, plus a correction for
           a thinko that caused a segv if DLC done twice between
	   captures.
  * recent session dialog doesn't have "subtrees" for sessions
           with just a single state (snapshot)
  * xfade editor changes 
         - "shade under line"
         - fix left offset of wave display
  * buttons/arrows on editor vertical scrollbar now work
  * template selector hidden in new session dialog if the user
          has no templates
  * fix problem with exporting caused by JACK transport fixes
  * MMC buttton relabelled "External MIDI Control", and moved
         to MIDI tab of Options editor, along with "Send MMC"
  * Better implemented the momentary mute and solo operations so that
    the previous state is restored on mouse-release.
  * added "lock", "unlock", "normalize", "reverse" to region context
        menu
  * add new operation to return captured regions to their "captured"
        location (does not work for embedded/imported regions). the
        operation is in the region context menu as "Original position".
  * fixes for region naming when handling external audio files
  * redesign new session dialog to use a tabbed notebook
  * make sure option editor's "follow playhead" button is in-sync
        with follow playhead setting
  * fix long-standing bug with MIDI request pool running out of
        memory.
  * fix export of 100% zeroes in 32 bit integer sample files
  * added MMC command when in master MMC mode for transport 
        startup (Deferred Play)
  * correct design flaw in creating regions from session file.
        (fixes some odd behaviour when undoing close to
	 start of working on a session, because regions did
	 not have the correct history set up)
  * limited shuttle speed when mouse departs the control box.
  * keep JACK shutdown/kick message on top of editor window
  * use "e" and "p" to position edit/playhead wherever mouse is
  * fixes for transport button madness
  * fix for autoloop indicator region visibility
  * made the horizontal scrollbar be a standard one
  * included new fader pixmaps from ryan (precursor to new theme)
  * ExportDialog saves Track information.  It doesn't restore it yet though.
  * LRDF enumerations are displayed in a combo box in the PluginUI.
  * Updated gtk-ardour Russian translation and added new libardour Russian translation.
  * Recent Sessions dialog doesn't display sessions that have been deleted.
  * Trying to sample a file in the AudioLibrary that has been moved or deleted won't crash.
  * fix catastrophic, stupid, unbelievable and just plain ridiculous 
        bug in editor constructor that left edit_cursor and
        playhead_cursor with random values when Editor::set_state()
	was called.
  * move "optimization flags" setting into a global autoconf file,
     and call AM_OPT_FLAGS from most configure scripts
  * increase size of UI request pool
  * increase size of UI request ringbuffer
  * finally get all tracks connected to ins+outs
      when using "auto-connect" options.
      (previously only the first N tracks
       would be connected, where N was the 
       number of physical i/o's on
       your audio interface)
  * prevent GTK from loading its default
      RC files at all costs.
  * fix gcc 3.3 "bug" in libsoundtouch
  * start to use the new BarController widget in plugin GUIs
  * fixed the declick on transport stop.  yes, it probably never
      worked, which is why you heard clicks on stopping.  this also
      fixes the problem where plugins are interrupted briefly on stop...
      now reverb tails are undisturbed on transport stop.
  * Audition port names are looked up at runtime.
  * Library UI uses the new jftw in libpbd.
  * The plugin selector is now sortable by clicking on the different column
     titles.
  * "stop at session end" option is now saved
  * "splash/about window" design changes - unfinished, and wow is it
      ugly. but its also more flexible, and i'll finish it RSN.
  * several dialog windows forced to float over the editor
  * "wait for loading" message removed
  * when adding multiple tracks, GUI runs between each track	
          (causes ugly flashing of mixer window, however)
  * Select context menu now contains
             "Select all in track"
	     "Select all"
	     "Invert in track"
	     "Invert all"
                (invert is known not to work on automation tracks)
  * incorrect handling of stereo streams through routes fixed.
  * check for adequate version of JACK
  * fix recursive call to DiskStream::set_name() that caused a crash
        when renaming a track
  * fix PortInsert to do a pure wire-level copy - no gain, no pan
  * count cycles for plugins
  * make sends meter correctly
  * clean up (longstanding) late initialization of several variables
         (thanks valgrind!)
  * convert error log to popup messages, mostly
  * run Gtk::Main event loop while embedding/linking an external file
        (and use the "watch/wait" cursor too)
  * add a half-working detent for panner bar controllers 
  * try to improve operation of gain/pan automation buttons
  * Added spanish translation.  Thank you Alex Krohn.
  * change pan line colors
  * fix display of slide/splice mode
  * clicks on track canvas views do not select track
  * pack IO CLists in IOSelector in a scrolled window (needs theme name)
  * select next IO port after making connection to current one
        (speeds and smooths UI interaction when doing IO setup)
  * Added spanish translation of ardour.1.
  * test plugin configuration and display a dialog if its incorrect
        (even when loading ... work in progress)
  * Added russian translation of man page.
  * Added valgrind shortcut for ardour into gtk_ardour. (arval).
  * correct problem with lack of playback in rec-enabled
        tracks when not using s/w monitoring
  * apply gain to s/w monitored rec-enabled tracks
  * fix nasty thread synchronization bug related to
        allocation+use of session-wide pan automation
        buffers
  * provide (not very good) warning if rec-enable attempt
       made on a track with no input connections
  * more tooltips
  * pan muting via context menu
  * fix potential segfault in ::~Session caused by
      double delete of playlists
  * MIDI control for panning added back (untested)

