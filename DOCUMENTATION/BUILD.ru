	    КАК СОБРАТЬ ARDOUR ИЗ ИСХОДНЫХ ТЕКСТОВ
            --------------------------------------

Пожалуйста внимание: прежде чем приступить к работе с Ardour, найдите
время чтобы подписаться на список рассылки разработчиков. Это очень
важно, потому что сообщество людей, использующих, тестирующих и
разрабатывающих Ardour, общаются в этом списке рассылки, и я НЕ БУДУ
отвечать на вопросы относительно сборки или ошибок в работе Ardour,
если они не будут заданы в этом списке. Подробнее об этом читайте на
странице http://ardour.sf.net/ или http://ardour.org/, где указано
как подписаться на список рассылки.

Этот документ написан для пользователей, хорошо знающих процесс сборки
программного обеспечения из исходных текстов с использованием пакетов
GNU automake и autoconf. Если Вы не знакомы с этим, тогда возможно вам
придётся подождать до тех пор, пока не появятся релизы Ardour, не требующие
сборки из исходных текстов (binary releases).

1) ПРАВИЛЬНОЕ ИСПОЛЬЗОВАНИЕ GNU AUTOCONF 
----------------------------------------
 
GNU autoconf весьма мощная система, однако у неё имеется как минимум
один существенный недостаток. По умолчанию autoconf (aclocal) ведёт
поиск требуемых файлов только в ОДНОМ каталоге. Это нормально работает,
кроме случаев, когда в системе установлены другие пакеты, размещающие
свои файлы autoconf или в каталоге /usr/local/lib/share/aclocal,
или /usr/lib/share/aclocal.

В результате, autoconf часто не может найти файлы, требуемые для сборки
Ardour, к тому же у многих пользователей одновременно имеются копии
библиотек, установленных разными способами: из исходных текстов (файлы
autoconf обычно находятся в каталоге /usr/local/lib...) и из собранных
пакетов (в этом случае файлы располагаются в каталоге /usr/lib...).

Рекомендуется указать расположение каталогов autoconf путем определения
в переменной ACLOCAL_FLAGS всех путей поиска.
Сначала найдите все aclocal директории:
 $ locate /aclocal/
и проверьте (найдите) все каталоги, содержащие файлы с расширением ".m4" .
Затем задайте переменную окружения ACLOCAL_FLAGS, как указано ниже
(в качестве примера):

 export ACLOCAL_FLAGS="-I /usr/share/aclocal -I /usr/local/share/aclocal -I /opt/gnome/share/aclocal"

Вы можете добавить эту строку в файлы .bashrc или .profile в вашем домашнем
каталоге, она будет исполняться каждый раз при входе в систему.

-----
Грубое и менее деликатное решение, описанное ниже, подразумевает слияние
всех директорий aclocal. Это не может быть рекомендовано, хотя этот 
вариант также работает.

Пожалуйста, проверьте содержимое обеих директорий перед тем как делать
"слияние", чтобы случайно не стереть корректную версию копий файлов
autoconf:

 * Если у вас есть оба каталога:

    cd /usr/lib/share/aclocal
    cp *.m4 /usr/local/lib/share/aclocal
    cd ..
    rm -rf aclocal
    ln -s /usr/local/lib/share/aclocal .

 * Если имеется только /usr/lib/share/aclocal

    cd /usr/local/lib
    ln -s /usr/lib/share/aclocal .

В некоторые дистрибутивах linux aclocal находится в различных местах.


2. КОМПИЛЯЦИЯ
-------------

Перед тем как компилировать Ardour убедитесь, что у вас установлены
следующие компоненты:

* Программы и утилиты:

       gcc/g++ версии 2.95.3 или выше (gcc/g++ 3.x works also) 
       autoconf 2.52 или выше
       automake 1.5 или выше
       libtool 1.4.2 или выше
       gettext 0.11.5 или выше
       pkgconfig 0.8.0 или выше
       http://www.freedesktop.org/software/pkgconfig/
       требуются также lex и yacc.
       любая версия bison >= 1.35 должна работать.

* Библиотеки:

Рекомендуемые версии, которые должны работать, показаны ниже.

       ALSA 0.9.X (CVS или текущий релиз) (http://www.alsa-project.org)

       JACK (http://jackit.sourceforge.net)

       libxml2 2.5.X (http://xmlsoft.org/)

       libart_lgpl 2.3.X

           - обычно является частью gnome-libs, которые как правило
		уже установлены

	   - в противном случае вы можете загрузить библиотеку с FTP-сайта
		исходных текстов GNOME.
	   - см. ftp://ftp.gnome.org/pub/GNOME/MIRRORS.html
	      и ищите в sources/libart_lgpl
	    
       glib 1.2   (http://www.gtk.org)
	glib-1.2.8 (включено в большинство дистрибутивов)

       GTK+ 1.2   (http://www.gtk.org)
	gtk+-1.2.8 (включено в большинство дистрибутивов)

       libsndfile (http://www.zip.com.au/~erikd/libsndfile)
	libsndfile-1.0 или выше

       libsamplerate (http://www.mega-nerd.com/SRC/)
         libsamplerate 0.0.13 или выше

       the LADSPA SDK (http://www.ladspa.org/)
	(см. ниже)

       raptor (http://www.redland.opensource.ac.uk/raptor/)

       lrdf  (needs raptor) (http://plugin.org.uk/lrdf/)
         liblrdf 0.4.0 или выше

Установка LADSPA
----------------

Сегодня описание интерфейса Linux Audio Developers Simple Plugin API
(LADSPA) содержит только заголовочный файл (header file), который
уже включён в дерево исходных текстов Ardour.

Тем не менее, вы можете захотеть установить и модули LADSPA plugins,
которые входят в состав полного пакета LADSPA SDK. Его можно найти и
загрузить (размер пакета небольшой) по адресу www.ladspa.org.

Также, я рекомендую загрузить прекрасный набор модулей (plugins) LADSPA
от Steve Harris с сайта http://plugin.org.uk/. Это намного повысит
полезные возможности Ardour. Со временем появятся и другие модули LADSPA,
чтобы быть в курсе - следите за анонсами в списке рассылки Linux Audio
Development.

2A) Компилирование из CVS
-------------------------

Загрузите или обновите дерево исходных текстов Ardour из CVS. (В приведённом
ниже примере символ '%' означает приглашение командной строки):

% cd /usr/local/src    # в качестве примера, вы можете сделать это где
		       пожелаете
% cvs -d:pserver:anoncvs@ardour.org:/cvsroot/ardour login
                       # (нажмите Enter/Return когда появится приглашение
		       к вводу пароля)
% cvs -d:pserver:anoncvs@ardour.org:/cvsroot/ardour -z3 co ardour

2A.1) ЧЕМ РАЗЛИЧАЮТСЯ СПОСОБЫ СБОРКИ ИЗ CVS ?
---------------------------------------------
Итак, вам нужно решить, являетесь ли вы разработчиком ardour или
пользователем. Если вы относите себя к первым из перечисленных, то возможно
ускорить работу, собрав библиотеку libardour как разделяемую. Это позволит
избавиться от перелинковки после каждого внесения изменений в эту библиотеку.
Если вы просто пользователь, этот шаг лишь осложнит вам жизнь. Итак,
если вы разработчик, тогда выполните следующую команду:

   touch ardour/libs/ardour/BUILD_FOR_DEVELOPMENT

Теперь библиотека libardour будет скомпилирована как разделяемая (shared).
Также вы должны использовать ключ --enable-development-build в команде
configure.

2A.2) ПОДГОТОВКА К СБОРКЕ ИЗ ИСХОДНЫХ ТЕКСТОВ
---------------------------------------------

Создайте autoconf/automake файлы:

% cd ardour
% sh autogen.sh

Теперь переходим к пункту 3.

2B) СБОРКА ИЗ АРХИВА ИСХОДНЫХ ТЕКСТОВ (tar.gz)
----------------------------------------------

Всё как обычно, загрузите и распакуйте архив. Файлы исходных текстов
будут находиться в каталоге с именем ardour-<номер версии>.

3) КАК СКОМПИЛИРОВАТЬ
---------------------

    ./configure  (с любыми опциями которые пожелаете)
    make
    make install

Если вы являетесь разработчиком и намереваетесь поработать над libardour,
используйте опцию --enable-development-build, которая включает динамическую
линковку ardour и его библиотек. Это позволит сэкономить время, так как
позволит избежать медленной процедуры статической линковки каждый раз, как
вы поменяете что-либо в libardour.

Если вы хотите скомпилировать Ardour так, чтобы в дальнейшем его можно
было запустить в отладчике, используйте опцию --disable-optimize.
В противном случае Ardour будет собран с максимальной оптимизацией,
что помешает эффективной отладке.

Как обычно в команде ./configure вы можете использовать опции --prefix
и --sysconfdir, чтобы изменить расположение файлов программы. Они будут
помещены по указанным путям командой "make install".

Компилирование исходных текстов может занять некоторое время. К примеру,
с ключом - j3 на системе dual PII-450 занимает около 20 минут.
