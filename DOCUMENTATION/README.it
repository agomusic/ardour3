			    ARDOUR README.it

	Paul Davis <paul@linuxaudiosystems.com> June 2003
 Italian Traslation by Vieri Verze <poe@softhome.net> August 2002
  Update by Filippo Pappalardo <filippo@email.it> December 2003

Benvenuti in Ardour.  Sebbene questo programma sia ancora in via di 
sviluppo, e` pronto a rendervi produttivi, permettervi di testarlo
e (si spera!) risolvere i bug e aggiungere nuove caratteristiche.

**** SICUREZZA *******************************************************

Per eseguire Ardour con la latenza piu` bassa e` necessario usare il
POSIX Real-Time Scheduling e disporre di tutta la memoria di cui ha
bisogno sotto forma di RAM fisica.  Queste richieste possono essere
soddisfatte soltanto se Ardour viene eseguito con i privilegi di root.

D'altra parte non tutto il male viene per nuocere.  Se non installate
Ardour con setuid root (che comunque non funziona), gli altri avranno
bisogno dei privilegi di root per eseguirlo.  Se li hanno Ardour e` il
vostro ultimo problema.  Quindi rilassatevi. Implementeremo le
capabilities non appena il kernel le supportera`, benche` questo non
aiuti molto la sicurezza, dal momento che un cracker intelligente
potra` comunque fare di tutto.

In alternativa, potete scegliere di esguire Ardour senza il RT
scheduling e non avrete nessun problema.  Non sara` molto utile nelle
situazioni in cui e` necessaria una bassa latenza. Praticamente nella
maggior parte dei casi.  Ricordatevi che tutto questo e` irrilevante se
possedete una scheda audio capace di fare "hardware monitoring".
In questo caso una latenza piu` alta rendera` un po` lenti i controlli
della UI di Ardour, mentre il monitoring durante la capture saranno
eccellenti.

**** COMPATIBILITA` HARDWARE *****************************************

Ardour usa il server audio JACK per tutte le operazioni di I/O.  In
questo modo fornisce un impareggiabile sistema di comunicazione con il
substrato hardware audio e le altre applicazioni.  Non è certamente
questo il luogo per discutere di JACK, ma se vi state chiedendo:

JACK usa le ALSA 0.9.0 API.  La particolarita` e` che le sfrutta in
un modo completamente nuovo soprattutto per quanto riguarda l' uso
dell' hardware.  Come risultato, benche` il totale supporto delle
periferiche h/w da parte di ALSA sia un successo facilmente ottenibile,
potrebbero esserci problemi concernenti la compatiblita` h/w.  Bisogna
tenere presente che il mio scopo principale e` di creare con JACK un
sistem audio professionale, e con Ardour un sistema professionale di
HDR.  Se puo` essere utile a utenti con schede a 2/4 canali, ben venga,
ma ricordate che questo non e` l' interesse primo.

Un altro aspetto importante e` che la vostra interfaccia audio deve
supportare l' I/O in full duplex nello stesso formato sia in registrazione
che suonando.  Significa, per esempio, che una Soundblaster AWE non
potra` essere usata con JACK in modalita` full duplex, a meno che una
delle due direzioni (registrazione o playback) e` a 8 bit e l' altra a 16.
Sono poche le schede che hanno questo tipo di limitazione, e non sono
generalmente adatte ad essere usate con JACK e Ardour per altri motivi.

Ad oggi, Ardour ha girato con:

   RME Hammerfall (Digi9652)              (26 canali in, 26 canali out)
   RME Hammerfall Light (Digi9636)        (18 canali in, 18 canali out)
   Midiman Delta series (ice1712 chipset) (12 canali in, 10 canali out)
  
   Diverse interfacce di fascia consumer, solitamente a 2 canali in,
   2/4 canali out, incluse:
   
   Hoontech 4Dwave-NX (Trident chipset)
   Ensoniq 5880
   Soundblaster 32
   Soundblaster 64
   Creative SBLive64

Al momento sembra funzionare con tutte le schede supportate da ALSA,
che e` l'obiettivo proposto.
  
**** SEGNALARE UN BUG ************************************************

I bug vanno segnalati ad http://ardour.org/mantis/ .  Dove è
probabile che vengano presi in considerazione e trattati.  Prima di
segnalare un bug è opportuno accertarsi che non sia gia` stato
segnalato e/o eliminato in cvs.

**** COMPILAZIONE E INSTALLAZIONE ************************************

1) GNU AUTOCONF RATIONALIZATION
-------------------------------
 
GNU autoconf e` un sistema intelligente, ma ha una grande lacuna.
Di default, autoconf (adesso aclocal) controlla UNA sola directory
alla ricerca dei file di cui ha bisogno.  Sarebbe OK se non venissero
installati altri pacchetti che qualche volta mettono i loro file di
autoconf in /usr/local/lib/share/aclocal e altre volte in
/usr/lib/share/aclocal.

Succede che autoconf non riesce a trovare i file di cui ha bisogno per
costruire Ardour, dal momento che molta gente ha una moltitudine di
librerie installate dalla distribuzione (i file di autoconf finiscono
in /usr/local/lib...) e dai pacchetti pre-costruiti (in questo caso i
pacchetti finiscono solitamente in /usr/lib...).

Per la vostra tranquillita`, vi raccomando di eseguire i seguenti passi
da root.  Controllate i contenuti di entrambe le direcroty prima di
eseguire questi comandi in modo da non cancellare accidentalmente la
corretta versione di un file autoconf:

 * Se avete esntrambe le directory:

    cd /usr/lib/share/aclocal
    cp *.m4 /usr/local/lib/share/aclocal
    cd ..
    rm -rf aclocal
    ln -s /usr/local/lib/share/aclocal .

 * Se avete solo /usr/lib/share/aclocal

    cd /usr/local/lib
    ln -s /usr/lib/share/aclocal .

Alcune distribuzioni hanno aclocal in altre directory.  YMMV. 

2. COMPILARE
------------

Prima di compilare Ardour, accertatevi di avere installato:

* Strumenti:

       gcc/g++ 2.95.3 o superiore (funziona anche gcc/g++ 3.x) 
       autoconf 2.52 o superiore
       automake 1.5 o superiore
       libtool 1.4.2 o superiore
       gettext 0.11.5 o superiore
       pkgconfig 0.8.0 o superiore
		http://www.freedesktop.org/software/pkgconfig/
       
       sono necessari anche lex e yacc
       		andra` bene qualsiasi versione di bison >= 1.35

* Librerie:

Le versioni raccomandate, quando necessario, sono presenti sotto le
versioni generiche.

       ALSA 0.9.X (CVS o snapshot release) (http://www.alsa-project.org)

       JACK (http://jackit.sourceforge.net)
       
       libxml2 2.5.X (http://xmlsoft.org/)
       
       libart_lgpl 2.3.X
       
       		- available as part of gnome-libs, which you may already
		  have on your system.

		- also available via download from GNOME source FTP sites.
		- see ftp://ftp.gnome.org/pub/GNOME/MIRRORS.htmland then
		  follow to sources/libart_lgpl
	      
       glib 1.2   (http://www.gtk.org)
	glib-1.2.8 (inclusa nella maggior parte delle distribuzioni)

       GTK+ 1.2   (http://www.gtk.org)
	gtk+-1.2.8 (inclusa nella maggior parte delle distribuzioni)

       libsndfile (http://www.zip.com.au/~erikd/libsndfile)
	libsndfile-0.0-28

       libsamplerate (http://www.mega-nerd.com/SRC/)
        libsamplerate 0.0.13 o superiore

       the LADSPA SDK (http://www.ladspa.org/)
	(Guardate sotto)
       
       raptor (http://www.redland.opensource.ac.uk/raptor/)

       lrdf  (richiede raptor) (http://plugin.org.uk/lrdf/)
        liblrdf 0.3.1 or higher
       
Ottenere  LADSPA

Nota: La Linux Audio Developers Simple Plugin API (LADSPA) consiste
in realta` di un semplice file header, già incluso nei sorgenti di
Ardour

Vorrete usare anche i suoi plugins, percui andate oltre e scaricate
l' intero pacchetto (non e` grande), da www.ladspa.org.

Vi raccomando di scaricare un eccelente set di plugins per LADSPA,
programmati da Steve Harris.  Il link e` http://plugin.org.uk/.
Trasformeranno Ardour in una appicazione vermante utile.  Altri plugins
di LADSPA sono in programmazione percui tenete d' occhio la Linux
Audio Development mailing list.

2A) COMPILARE DA CVS
---------------------

Posizionatevi nel path in cui volete copiare i CVS di Ardour (la '%'
e` il vostro shell prompt):

% cd /usr/local/src    # e` un esempio, potete scegliere un path qualsiasi
% cvs -d:pserver:anoncvs@ardour.org:/cvsroot/ardour login
                       # (premete enter/return quando vi sara` chiesta
			  la password)
% cvs -d:pserver:anoncvs@ardour.org:/cvsroot/ardour -z3 co ardour

2A.1) CHE TIPO DI COMPILAZIONE?
--------------------------------

Il prossimo passo è quello di decidere se si vuole una installazione per
sviluppatori o per semplici utenti.  Se siete sviluppatori, potrebbe essere
una buona idea compilare libardour come libreria condivisa, cosi` da evitare
di collegare l'eseguibile ogni volta che cambiate versione di libreria.
Se siete semplici utenti, questo renderebbe solo la vita più difficile.
In caso siate sviluppatori dunque eseguite:
	
	touch ardour/libs/ardour/BUILD_FOR_DEVELOPMENT

Questo fara` si` che libardour sia compilata come libreria condivisa.  Dovreste
conseguentemente passare il parametro --enable-development-build a configure.

2A.2) PREPARARE IL SISTEMA PER LA COMPILAZIONE
----------------------------------------------

Ora costruite i file autoconf/automake:

% cd ardour
% sh autogen.sh

Andate al passo 3.

2B) COMPILARE DA UN TARBALL
---------------------------

Come al solito: prelevate e scompattate il tarball.  La directory creata,
ardour-<versione>, e` chiamata piu` sotto "$AD".

3) COME COMPILARE
-----------------

    ./configure (con tutte i parametri che vorrete passare)
    make
    make install

Se siete uno sviluppatore che intende lavorare su libardour, potreste
voler usare il parametro --enable-development-build, che colleghera`
dinamicamente l'eseguibile a libardour, risparmiando molto tempo
nell'evitare un collegamento statico da effettuare ogni volta che si
operano cambiamenti su libardour.

Se volete compilare ardour in modo che possiate farne il `debugging`,
dovreste usare anche il parametro --disable-optimize.  Senza questo
Ardour viene compilato con ottimizzazioni estreme ed il risultato non
può essere oggetto di `debugging` in modo efficace.

Come tutti gli script di configurazione, se non volete che
l' installazione avvenga ne "solito posto", aggiungete un --prefix al
comando ./configure.  Potreste anche considerare di aggiungere un
parametro --sysconfdir, dal momento che `make install` tenterà di
installare tutti i file di configurazione in un percorso che tiene
conti di questo parametro.

La compilazione ci mette un po`.  Eseguendo make -j3 su un dual PII-450
l'intero processo impiega circa 10-15 minuti.

4. ESEGUIRE ARDOUR
------------------

NOTA: Dovete prima di tutto eseguire il server JACK.
      ----------------------------------------------


Se avete eseguito "make install", allora potete digitare "ardour" e
qualcosa succedera`.  Col comando "ardour --help" otterrete una
lista delle possibili opzioni.
